{"version":3,"file":"theme.js","sources":["node_modules/jquery/dist/jquery.js","source/scripts/utils/jquery.js","node_modules/scriptjs/dist/script.js","node_modules/shopify-sections-manager/dist/shopify-sections-manager.es.js","node_modules/intersection-observer/intersection-observer.js","node_modules/rimg/dist/index.es.js","node_modules/rimg-shopify/dist/index.es.js","node_modules/pxs-map/dist/index.es.js","node_modules/fitvids/index.js","node_modules/grouped-content/dist/index.js","source/scripts/utils/Rte.js","source/scripts/utils/ThemeUtils.js","source/scripts/components/ModalContent.js","node_modules/ev-emitter/ev-emitter.js","node_modules/imagesloaded/imagesloaded.js","node_modules/debounce/index.js","source/scripts/components/ModalView.js","source/scripts/templates/TemplateAccount.js","node_modules/get-size/get-size.js","node_modules/desandro-matches-selector/matches-selector.js","node_modules/fizzy-ui-utils/utils.js","node_modules/outlayer/item.js","node_modules/outlayer/outlayer.js","node_modules/masonry-layout/masonry.js","source/scripts/templates/TemplateCollection.js","source/scripts/templates/TemplateGiftCard.js","source/scripts/templates/TemplateListCollections.js","source/scripts/templates/TemplatePassword.js","source/scripts/sections/DynamicSlideshow.js","source/scripts/sections/DynamicVideo.js","source/scripts/sections/StaticCart.js","node_modules/shopify-currency-converter/dist/index.js","node_modules/shopify-variants/dist/shopify-variants.es.js","source/scripts/utils/ImageZoom.js","source/scripts/sections/StaticProduct.js","source/scripts/components/MegaNavigation.js","source/scripts/components/Header.js","source/scripts/components/Sidebar.js","node_modules/twitter-fetcher/js/twitterFetcher_min.js","source/scripts/components/Footer.js","source/scripts/Pacific.js"],"sourcesContent":["/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, doc, node ) {\n\t\tdoc = doc || document;\n\n\t\tvar i,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.3.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\t\t) );\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\t\tval = curCSS( elem, dimension, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox;\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\tif ( val === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\n\t\t// offsetWidth/offsetHeight provide border-box values\n\t\tvalueIsBorderBox = true;\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\telem,\n\t\t\t\t\tdimension,\n\t\t\t\t\textra,\n\t\t\t\t\tisBorderBox,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","// jQuery plugins expect to find a global `jQuery` object, so we\n// need to attach it to the window.\n//\n// This is in its own file because we have to attach it before any\n// other imports happen, but with ES6 modules, all `import`s have\n// to be at the top.\nimport $ from 'jquery';\n\nwindow.jQuery = $;\nwindow.$ = $;\n","/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      fn(el)\n      return 1\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n","\n/*!\n * shopify-sections-manager v0.0.0\n * (c) 2018 Pixel Union\n */\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction triggerInstanceEvent(instance, eventName) {\n  if (instance && instance[eventName]) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    instance[eventName].apply(instance, args);\n  }\n}\n\nfunction loadData(el) {\n  var dataEl = el.querySelector('[data-section-data]');\n  if (!dataEl) return {};\n\n  // Load data from attribute, or innerHTML\n  var data = dataEl.getAttribute('data-section-data') || dataEl.innerHTML;\n\n  try {\n    return JSON.parse(data);\n  } catch (error) {\n    console.warn('Sections: invalid section data found. ' + error.message);\n    return {};\n  }\n}\n\nvar ShopifySectionsManager = function () {\n  function ShopifySectionsManager() {\n    classCallCheck(this, ShopifySectionsManager);\n\n    this.handlers = {};\n    this.instances = {};\n    this._onSectionEvent = this._onSectionEvent.bind(this);\n\n    document.addEventListener('shopify:section:load', this._onSectionEvent);\n    document.addEventListener('shopify:section:unload', this._onSectionEvent);\n    document.addEventListener('shopify:section:select', this._onSectionEvent);\n    document.addEventListener('shopify:section:deselect', this._onSectionEvent);\n    document.addEventListener('shopify:section:reorder', this._onSectionEvent);\n    document.addEventListener('shopify:block:select', this._onSectionEvent);\n    document.addEventListener('shopify:block:deselect', this._onSectionEvent);\n  }\n\n  /**\n   * Stop listening for section events, and unbind all handlers.\n   */\n\n\n  createClass(ShopifySectionsManager, [{\n    key: 'unbind',\n    value: function unbind() {\n      document.removeEventListener('shopify:section:load', this._onSectionEvent);\n      document.removeEventListener('shopify:section:unload', this._onSectionEvent);\n      document.removeEventListener('shopify:section:select', this._onSectionEvent);\n      document.removeEventListener('shopify:section:deselect', this._onSectionEvent);\n      document.removeEventListener('shopify:section:reorder', this._onSectionEvent);\n      document.removeEventListener('shopify:block:select', this._onSectionEvent);\n      document.removeEventListener('shopify:block:deselect', this._onSectionEvent);\n\n      // Unload all instances\n      for (var i = 0; i < this.instances.length; i++) {\n        triggerInstanceEvent(this.instances[i], 'onSectionUnload');\n      }\n\n      this.handlers = {};\n      this.instances = {};\n    }\n\n    /**\n     * Register a section handler.\n     *\n     * @param {string} type\n     *        The section type to handle. The handler will be called for all\n     *        sections with this type.\n     *\n     * @param {function} handler\n     *        The handler function is passed information about a specific section\n     *        instance. The handler is expected to return an object that will be\n     *        associated with the section instance.\n     *\n     *        Section handlers are passed an object with the following parameters:\n     *          {string} id\n     *          An ID that maps to a specific section instance. Typically the\n     *          section's filename for static sections, or a generated ID for\n     *          dynamic sections.\n     *\n     *          {string} type\n     *          The section type, as supplied when registered.\n     *\n     *          {Element} el\n     *          The root DOM element for the section instance.\n     *\n     *          {Object} data\n     *          Data loaded from the section script element. Defaults to an\n     *          empty object.\n     *\n     *          {Function} postMessage\n     *          A function that can be called to pass messages between sections.\n     *          The function should be called with a message \"name\", and\n     *          optionally some data.\n     */\n\n  }, {\n    key: 'register',\n    value: function register(type, handler) {\n      if (this.handlers[type]) {\n        console.warn('Sections: section handler already exists of type \\'' + type + '\\'.');\n      }\n\n      // Store the section handler\n      this.handlers[type] = handler;\n\n      // Init sections for this type\n      this._initSections(type);\n    }\n\n    /**\n     * Initialize sections already on the page.\n     */\n\n  }, {\n    key: '_initSections',\n    value: function _initSections(type) {\n      // Fetch all existing sections of our type on the page\n      var dataEls = document.querySelectorAll('[data-section-type=\"' + type + '\"]');\n      if (!dataEls) return;\n\n      // Create an instance for each section\n      for (var i = 0; i < dataEls.length; i++) {\n        var dataEl = dataEls[i];\n        var el = dataEl.parentNode;\n\n        // Get instance ID\n        var idEl = el.querySelector('[data-section-id]');\n\n        if (!idEl) {\n          console.warn('Sections: unable to find section id for \\'' + type + '\\'.', el);\n          return;\n        }\n\n        var sectionId = idEl.getAttribute('data-section-id');\n        if (!sectionId) {\n          console.warn('Sections: unable to find section id for \\'' + type + '\\'.', el);\n          return;\n        }\n\n        this._createInstance(sectionId, el);\n      }\n    }\n  }, {\n    key: '_onSectionEvent',\n    value: function _onSectionEvent(event) {\n      var el = event.target;\n      var sectionId = event.detail.sectionId;\n      var blockId = event.detail.blockId;\n      var instance = this.instances[sectionId];\n\n      switch (event.type) {\n        case 'shopify:section:load':\n          this._createInstance(sectionId, el);\n          break;\n\n        case 'shopify:section:unload':\n          triggerInstanceEvent(instance, 'onSectionUnload', { el: el, id: sectionId });\n          delete this.instances[sectionId];\n          break;\n\n        case 'shopify:section:select':\n          triggerInstanceEvent(instance, 'onSectionSelect', { el: el, id: sectionId });\n          break;\n\n        case 'shopify:section:deselect':\n          triggerInstanceEvent(instance, 'onSectionDeselect', { el: el, id: sectionId });\n          break;\n\n        case 'shopify:section:reorder':\n          triggerInstanceEvent(instance, 'onSectionReorder', { el: el, id: sectionId });\n          break;\n\n        case 'shopify:block:select':\n          triggerInstanceEvent(instance, 'onSectionBlockSelect', { el: el, id: blockId });\n          break;\n\n        case 'shopify:block:deselect':\n          triggerInstanceEvent(instance, 'onSectionBlockDeselect', { el: el, id: blockId });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: '_postMessage',\n    value: function _postMessage(name, data) {\n      var _this = this;\n\n      Object.keys(this.instances).forEach(function (id) {\n        triggerInstanceEvent(_this.instances[id], 'onSectionMessage', name, data);\n      });\n    }\n  }, {\n    key: '_createInstance',\n    value: function _createInstance(id, el) {\n      var typeEl = el.querySelector('[data-section-type]');\n      if (!typeEl) return;\n\n      var type = typeEl.getAttribute('data-section-type');\n      if (!type) return;\n\n      var handler = this.handlers[type];\n      if (!handler) {\n        console.warn('Sections: unable to find section handler for type \\'' + type + '\\'.');\n        return;\n      }\n\n      var data = loadData(el);\n      var postMessage = this._postMessage.bind(this);\n\n      this.instances[id] = handler({ id: id, type: type, el: el, data: data, postMessage: postMessage });\n    }\n  }]);\n  return ShopifySectionsManager;\n}();\n\nexport default ShopifySectionsManager;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","/*!\n * rimg v2.1.2\n * (c) 2018 Pixel Union\n */\n/**\n * The default template render function. Turns a template string into an image\n * URL.\n *\n * @param {String} template\n * @param {Size} size\n * @returns {String}\n */\nfunction defaultTemplateRender(template, size) {\n  return template.replace('{size}', size.width + 'x' + size.height);\n}\n\n/**\n * @type Settings\n */\nvar defaults = {\n  scale: 1,\n  template: false,\n  templateRender: defaultTemplateRender,\n  max: { width: Infinity, height: Infinity },\n  round: 32,\n  placeholder: false\n};\n\n/**\n * Get a data attribute value from an element, with a default fallback and\n * sanitization step.\n *\n * @param {Element} el\n *\n * @param {String} name\n *        The data attribute name.\n *\n * @param {Object} options\n *        An object holding fallback values if the data attribute does not\n *        exist. If this object doesn't have the property, we further fallback\n *        to our defaults.\n *\n * @param {Function} [sanitize]\n *        A function to sanitize the data attribute value with.\n *\n * @returns {String|*}\n */\nfunction getData(el, name, options, sanitize) {\n  var attr = 'data-rimg-' + name;\n  if (!el.hasAttribute(attr)) return options[name] || defaults[name];\n\n  var value = el.getAttribute(attr);\n\n  return sanitize ? sanitize(value) : value;\n}\n\n/**\n * Sanitize data attributes that represent a size (in the form of `10x10`).\n *\n * @param {String} value\n * @returns {Object} An object with `width` and `height` properties.\n */\nfunction parseSize(value) {\n  value = value.split('x');\n  return { width: parseInt(value[0], 10), height: parseInt(value[1], 10) };\n}\n\n/**\n * Loads information about an element.\n *\n * Options can be set on the element itself using data attributes, or through\n * the `options` parameter. Data attributes take priority.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n * @returns {Item}\n */\nfunction parseItem(el) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var isImage = el.hasAttribute('data-rimg-template');\n\n  /**\n   * @typedef {Settings} Item\n   */\n  return {\n    el: el,\n\n    // Type of element\n    isImage: isImage,\n    isBackgroundImage: isImage && el.tagName !== 'IMG',\n\n    // Image scale\n    scale: getData(el, 'scale', options),\n\n    // Device density\n    density: window.devicePixelRatio || 1,\n\n    // Image template URL\n    template: getData(el, 'template', options),\n    templateRender: options.templateRender || defaults.templateRender,\n\n    // Maximum image dimensions\n    max: getData(el, 'max', options, parseSize),\n\n    // Round image dimensions to the nearest multiple\n    round: getData(el, 'round', options),\n\n    // Placeholder image dimensions\n    placeholder: getData(el, 'placeholder', options, parseSize)\n  };\n}\n\n/**\n * Round to the nearest multiple.\n *\n * This is so we don't tax the image server too much.\n *\n * @param {Number} size The size, in pixels.\n * @param {Number} multiple The multiple to round to the nearest.\n * @returns {Number}\n */\nfunction roundSize(size, multiple) {\n  return Math.ceil(size / multiple) * multiple;\n}\n\n/**\n * Get the size of an element.\n *\n * If it is too small, it's parent element is checked, and so on. This helps\n * avoid the situation where an element doesn't have a size yet or is positioned\n * out of the layout.\n *\n * @param {HTMLElement} el\n * @return {Object} size\n * @return {Number} size.width The width, in pixels.\n * @return {Number} size.height The height, in pixels.\n */\nfunction getElementSize(el) {\n  var size = { width: 0, height: 0 };\n\n  while (el) {\n    size.width = el.offsetWidth;\n    size.height = el.offsetHeight;\n    if (size.width > 20 && size.height > 20) break;\n    el = el.parentNode;\n  }\n\n  return size;\n}\n\n/**\n * Trigger a custom event.\n *\n * Note: this approach is deprecated, but still required to support older\n * browsers such as IE 10.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events\n *\n * @param {HTMLElement} el\n *        The element to trigger the event on.\n *\n * @param {String} name\n *        The event name.\n *\n * @returns {Boolean}\n *          True if the event was canceled.\n */\nfunction trigger(el, name) {\n  var event = document.createEvent('Event');\n  event.initEvent(name, true, true);\n  return !el.dispatchEvent(event);\n}\n\n/**\n * Return the maximum supported density of the image, given the container.\n *\n * @param {Item} item\n * @param {Size} size\n */\nfunction supportedDensity(item, size) {\n  return Math.min(Math.min(Math.max(item.max.width / size.width, 1), item.density), Math.min(Math.max(item.max.height / size.height, 1), item.density)).toFixed(2);\n}\n\n/**\n * Set the image URL on the element. Supports background images and `srcset`.\n *\n * @param {Item} item\n * @param {Size} size\n * @param {Boolean} isPlaceholder\n */\nfunction setImage(item, size, isPlaceholder, onLoad) {\n  var render = item.templateRender;\n  var density = isPlaceholder ? 1 : supportedDensity(item, size);\n  var round = isPlaceholder ? 1 : item.round;\n\n  // Calculate the final display size, taking into account the image's\n  // maximum dimensions.\n  var width = roundSize(size.width * density, round);\n  var height = roundSize(size.height * density, round);\n  var ratio = Math.min(1, item.max.width / width, item.max.height / height);\n  var displaySize = {\n    width: Math.round(ratio * width),\n    height: Math.round(ratio * height)\n  };\n\n  var url = render(item.template, displaySize);\n\n  // On load callback\n  var image = new Image();\n  image.onload = onLoad;\n  image.src = url;\n\n  // Set image\n  if (item.isBackgroundImage) {\n    item.el.style.backgroundImage = 'url(\\'' + url + '\\')';\n  } else {\n    item.el.setAttribute('srcset', url + ' ' + density + 'x');\n  }\n}\n\n/**\n * Load the image, set loaded status, and trigger the load event.\n *\n * @fires rimg:load\n * @fires rimg:error\n * @param {Item} item\n * @param {Size} size\n */\nfunction loadFullImage(item, size) {\n  var el = item.el;\n\n  setImage(item, size, false, function (event) {\n    if (event.type === 'load') {\n      el.setAttribute('data-rimg', 'loaded');\n    } else {\n      el.setAttribute('data-rimg', 'error');\n      trigger(el, 'rimg:error');\n    }\n\n    trigger(el, 'rimg:load');\n  });\n}\n\n/**\n * Load in a responsive image.\n *\n * Sets the image's `srcset` attribute to the final image URLs, calculated based\n * on the actual size the image is being shown at.\n *\n * @fires rimg:loading\n *        The image URLs have been set and we are waiting for them to load.\n *\n * @fires rimg:loaded\n *        The final image has loaded.\n *\n * @fires rimg:error\n *        The final image failed loading.\n *\n * @param {Item} item\n */\nfunction loadImage(item) {\n  var el = item.el;\n\n  // Already loaded?\n  var status = el.getAttribute('data-rimg');\n  if (status === 'loading' || status === 'loaded') return;\n\n  // Is the SVG loaded?\n  if (!el.complete && !item.isBackgroundImage) {\n    // Wait for the load event, then call load image\n    el.addEventListener('load', function cb() {\n      el.removeEventListener('load', cb);\n      loadImage(item);\n    });\n\n    return;\n  }\n\n  // Trigger loading event, and stop if cancelled\n  if (trigger(el, 'rimg:loading')) return;\n\n  // Mark as loading\n  el.setAttribute('data-rimg', 'loading');\n\n  // Get element size. This is used as the ideal display size.\n  var size = getElementSize(item.el);\n\n  size.width *= item.scale;\n  size.height *= item.scale;\n\n  if (item.placeholder) {\n    // Load a placeholder image first, followed by the full image. Force the\n    // element to keep its dimensions while it loads. If the image is smaller\n    // than the element size, use the image's size. Density is taken into account\n    // for HiDPI devices to avoid blurry images.\n    if (!item.isBackgroundImage) {\n      el.setAttribute('width', Math.min(Math.floor(item.max.width / item.density), size.width));\n      el.setAttribute('height', Math.min(Math.floor(item.max.height / item.density), size.height));\n    }\n\n    setImage(item, item.placeholder, true, function () {\n      return loadFullImage(item, size);\n    });\n  } else {\n    loadFullImage(item, size);\n  }\n}\n\n/**\n * Prepare an element to be displayed on the screen.\n *\n * Images have special logic applied to them to swap out the different sources.\n *\n * @fires rimg:enter\n *        The element is entering the viewport.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n */\nfunction load(el, options) {\n  if (!el) return;\n  trigger(el, 'rimg:enter');\n\n  var item = parseItem(el, options);\n\n  if (item.isImage) {\n    if (!item.isBackgroundImage) {\n      el.setAttribute('data-rimg-template-svg', el.getAttribute('srcset'));\n    }\n\n    loadImage(item);\n  }\n}\n\n/**\n * Reset an element's state so that its image can be recalculated.\n *\n * @fires rimg:update\n *        The element is being updated.\n *\n * @param {HTMLElement} el\n * @param {Settings} options\n */\nfunction update(el, options) {\n  if (!el) return;\n  trigger(el, 'rimg:update');\n\n  var item = parseItem(el, options);\n\n  if (item.isImage) {\n    if (!item.isBackgroundImage) {\n      el.setAttribute('data-rimg', 'lazy');\n      el.setAttribute('srcset', el.getAttribute('data-rimg-template-svg'));\n    }\n\n    loadImage(item);\n  }\n}\n\n/**\n * Returns true if the element is within the viewport.\n * @param {HTMLElement} el\n * @returns {Boolean}\n */\nfunction inViewport(el) {\n  var root = document.documentElement;\n  var width = Math.min(root.clientWidth, window.innerWidth);\n  var height = Math.min(root.clientHeight, window.innerHeight);\n  var rect = el.getBoundingClientRect();\n\n  return rect.bottom >= 0 && rect.right >= 0 && rect.top <= height && rect.left <= width;\n}\n\n/**\n * @typedef {Object} Size\n * @property {Number} width\n * @property {Number} height\n */\n\n/**\n * A function to turn a template string into a URL.\n *\n * @callback TemplateRenderer\n * @param {String} template\n * @param {Size} size\n * @returns {String}\n */\n\n/**\n * @typedef {Object} Settings\n *\n * @property {String} [template]\n *           A template string used to generate URLs for an image. This allows us to\n *           dynamically load images with sizes to match the container's size.\n *\n * @property {TemplateRenderer} [templateRender]\n *           A function to turn a template string into a URL.\n *\n * @property {Size} [max]\n *           The maximum available size for the image. This ensures we don't\n *           try to load an image larger than is possible.\n *\n * @property {Number} [round]\n *           Round image dimensions to the nearest multiple. This is intended to\n *           tax the image server less by lowering the number of possible image\n *           sizes requested.\n *\n * @property {Size} [placeholder]\n *           The size of the lo-fi image to load before the full image.\n */\n\n/**\n * Initialize the responsive image handler.\n *\n * @param {String|HTMLElement|NodeList} selector\n *        The CSS selector, element, or elements to track for lazy-loading.\n *\n * @param {Settings} options\n *\n * @returns {PublicApi}\n */\nfunction rimg() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Intersections\n  var io = new IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        io.unobserve(entry.target);\n        load(entry.target, options);\n      }\n    });\n  }, {\n    // Watch the viewport, with 20% vertical margins\n    rootMargin: '20% 0px'\n  });\n\n  /**\n   * @typedef {Object} PublicApi\n   */\n  var api = {\n    /**\n     * Track a new selector, element, or nodelist for lazy-loading.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    track: function track() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n\n      var els = querySelector(selector);\n\n      for (var i = 0; i < els.length; i++) {\n        // If an element is already in the viewport, load it right away. This\n        // fixes a race-condition with dynamically added elements.\n        if (inViewport(els[i])) {\n          load(els[i], options);\n        } else {\n          io.observe(els[i]);\n        }\n      }\n    },\n\n\n    /**\n     * Update element(s) that have already been loaded to force their images\n     * to be recalculated.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    update: function update$$1() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"loaded\"]';\n\n      var els = querySelector(selector);\n      for (var i = 0; i < els.length; i++) {\n        update(els[i], options);\n      }\n    },\n\n\n    /**\n     * Stop tracking element(s) for lazy-loading.\n     * @type Function\n     * @param {String|HTMLElement|NodeList} selector\n     */\n    untrack: function untrack() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg]';\n\n      var els = querySelector(selector);\n      for (var i = 0; i < els.length; i++) {\n        io.unobserve(els[i]);\n      }\n    },\n\n\n    /**\n     * Unload all event handlers and observers.\n     * @type Function\n     */\n    unload: function unload() {\n      io.disconnect();\n    }\n  };\n\n  // Add initial elements\n  api.track(selector);\n\n  return api;\n}\n\n/**\n * Finds a group of elements on the page.\n *\n * @param {String|HTMLElement|NodeList} selector\n * @returns {Object} An array-like object.\n */\nfunction querySelector(selector) {\n  if (typeof selector === 'string') {\n    return document.querySelectorAll(selector);\n  }\n\n  if (selector instanceof HTMLElement) {\n    return [selector];\n  }\n\n  if (selector instanceof NodeList) {\n    return selector;\n  }\n\n  return [];\n}\n\nexport default rimg;\n","/*!\n * rimg-shopify v2.2.2\n * (c) 2018 Pixel Union\n */\nimport rimg from 'rimg';\n\n/**\n * Polyfill for Element.matches().\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n */\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i = matches.length;\n    while (--i >= 0 && matches.item(i) !== this) {}\n    return i > -1;\n  };\n}\n\nvar state = {\n  init: init,\n  watch: watch,\n  unwatch: unwatch\n};\n\nfunction init() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-rimg=\"lazy\"]';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  state.selector = selector;\n  state.instance = rimg(selector, options);\n  state.loadedWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  // Listen for Shopify theme editor events\n  document.addEventListener('shopify:section:load', function (event) {\n    return watch(event.target);\n  });\n\n  window.addEventListener('resize', function () {\n    return _update();\n  });\n\n  document.addEventListener('shopify:section:unload', function (event) {\n    return unwatch(event.target);\n  });\n\n  // Listen for custom events to allow themes to hook into rimg\n  document.addEventListener('theme:rimg:watch', function (event) {\n    return watch(event.target);\n  });\n\n  document.addEventListener('theme:rimg:unwatch', function (event) {\n    return unwatch(event.target);\n  });\n\n  // Support custom events triggered through jQuery\n  // See: https://github.com/jquery/jquery/issues/3347\n  if (window.jQuery) {\n    jQuery(document).on({\n      'theme:rimg:watch': function themeRimgWatch(event) {\n        return watch(event.target);\n      },\n      'theme:rimg:unwatch': function themeRimgUnwatch(event) {\n        return unwatch(event.target);\n      }\n    });\n  }\n}\n\n/**\n * Track an element, and its children.\n *\n * @param {HTMLElement} el\n */\nfunction watch(el) {\n  // Track element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.track(el);\n  }\n\n  // Track element's children\n  state.instance.track(el.querySelectorAll(state.selector));\n}\n\n/**\n * Untrack an element, and its children\n *\n * @param {HTMLElement} el\n * @private\n */\nfunction unwatch(el) {\n  // Untrack element's children\n  state.instance.untrack(el.querySelectorAll(state.selector));\n\n  // Untrack element\n  if (typeof el.matches === 'function' && el.matches(state.selector)) {\n    state.instance.untrack(el);\n  }\n}\n\n/**\n * Update an element, and its children.\n *\n * @param {HTMLElement} el\n */\nfunction _update() {\n  var currentWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  // Return if we're not 2x smaller, or larger than the existing loading size\n  if (currentWidth / state.loadedWidth > 0.5 && currentWidth / state.loadedWidth < 2) {\n    return;\n  }\n\n  state.loadedWidth = currentWidth;\n  state.instance.update();\n}\n\nexport default state;\n","\n/*!\n * pxs-map v2.0.3\n * (c) 2018 undefined\n */\n\nimport $ from 'jquery';\nimport $script from 'scriptjs';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/*\n * Function to convert any given latitude and longitude format to decimal degrees\n */\nfunction getDecimalDegrees() {\n  var firstComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var secondComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var thirdComponent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var fourthComponent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  var directions = {\n    N: 1,\n    E: 1,\n    S: -1,\n    W: -1\n  };\n  var decimalDegrees = 0.0;\n  var components = [firstComponent, secondComponent, thirdComponent, fourthComponent];\n\n  for (var i = 0; i < components.length; i++) {\n    var component = components[i];\n\n    if (component) {\n      if (Number.isNaN(parseFloat(component))) {\n        decimalDegrees *= directions[component];\n      } else {\n        decimalDegrees += parseFloat(component) / Math.pow(60, i);\n      }\n    }\n  }\n\n  return decimalDegrees;\n}\n\n/*\n * By providing the ability to use a place name, or latitude and longitude coordinates\n * we give merchants, and our demo stores the option to bypass the Geocoding API.\n * The Geocoding API (https://developers.google.com/maps/documentation/geocoding/usage-and-billing) allows us\n * to take a place name and convert it to latitude and longitude expressed in decimal degrees.\n */\nfunction getLatitudeLongitude(address) {\n  var deferred = $.Deferred();\n  // Degrees, Minutes and Seconds: DDD° MM' SS.S\"\n  var latLongDegreesMinutesSeconds = /^([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2})(?:'[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:\"[ ]?| )?(N|E|S|W) ?([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2})(?:'[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:\"[ ]?| )?(N|E|S|W)$/g;\n  // Degrees and Decimal Minutes: DDD° MM.MMM'\n  var latLongDegreesMinutes = /^([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:'[ ]?| )?(N|E|S|W) ?([0-9]{1,3})(?:°[ ]?| )([0-9]{1,2}(?:\\.[0-9]+)?)(?:'[ ]?| )?(N|E|S|W)$/g;\n  // Decimal Degrees: DDD.DDDDD°\n  var latLongDegrees = /^([-|+]?[0-9]{1,3}(?:\\.[0-9]+)?)(?:°[ ]?| )?(N|E|S|W)?,? ?([-|+]?[0-9]{1,3}(?:\\.[0-9]+)?)(?:°[ ]?| )?(N|E|S|W)?$/g;\n  var latLongFormats = [latLongDegreesMinutesSeconds, latLongDegreesMinutes, latLongDegrees];\n  var latLongMatches = latLongFormats.map(function (latLongFormat) {\n    return address.match(latLongFormat);\n  });\n\n  /*\n   * Select the first latitude and longitude format that is matched.\n   * Ordering:\n   *   1. Degrees, minutes, and seconds,\n   *   2. Degrees, and decimal minutes,\n   *   3. Decimal degrees.\n   */\n  var latLongMatch = latLongMatches.reduce(function (accumulator, value, index) {\n    if (!accumulator && value) {\n      var latLongResult = latLongFormats[index].exec(address);\n      var lat = latLongResult.slice(1, latLongResult.length / 2 + 1);\n      var lng = latLongResult.slice(latLongResult.length / 2 + 1, latLongResult.length);\n\n      return {\n        lat: lat,\n        lng: lng\n      };\n    }\n\n    return accumulator;\n  }, null);\n\n  // If we've got a match on latitude and longitude, use that and avoid geocoding\n  if (latLongMatch) {\n    var latDecimalDegrees = getDecimalDegrees.apply(undefined, toConsumableArray(latLongMatch.lat));\n    var longDecimalDegrees = getDecimalDegrees.apply(undefined, toConsumableArray(latLongMatch.lng));\n\n    deferred.resolve({\n      lat: latDecimalDegrees,\n      lng: longDecimalDegrees\n    });\n  } else {\n    // Otherwise, geocode the assumed address\n    var geocoder = new google.maps.Geocoder();\n\n    geocoder.geocode({ address: address }, function (results, status) {\n      if (status !== google.maps.GeocoderStatus.OK) {\n        deferred.reject(status);\n      }\n\n      deferred.resolve(results[0].geometry.location);\n    });\n  }\n\n  return deferred;\n}\n\nfunction getMapStyles(colors) {\n  if (!colors) {\n    return [];\n  }\n\n  return [{ elementType: 'geometry', stylers: [{ color: colors.e }] }, { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] }, { elementType: 'labels.text.fill', stylers: [{ color: colors.a }] }, { elementType: 'labels.text.stroke', stylers: [{ color: colors.e }] }, { featureType: 'administrative', elementType: 'geometry', stylers: [{ visibility: 'off' }] }, { featureType: 'administrative.country', stylers: [{ visibility: 'off' }] }, { featureType: 'administrative.land_parcel', stylers: [{ visibility: 'off' }] }, { featureType: 'administrative.neighborhood', stylers: [{ visibility: 'off' }] }, { featureType: 'administrative.locality', stylers: [{ visibility: 'off' }] }, { featureType: 'poi', stylers: [{ visibility: 'off' }] }, { featureType: 'road', elementType: 'geometry.fill', stylers: [{ color: colors.d }] }, { featureType: 'road', elementType: 'labels.icon', stylers: [{ visibility: 'off' }] }, { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: colors.c }] }, { featureType: 'road.highway', elementType: 'geometry', stylers: [{ color: colors.b }] }, { featureType: 'road.highway.controlled_access', stylers: [{ visibility: 'off' }] }, { featureType: 'road.local', elementType: 'labels.text.fill', stylers: [{ color: colors.b }] }, { featureType: 'road.local', elementType: 'labels.text.stroke', stylers: [{ color: colors.e }] }, { featureType: 'transit', stylers: [{ visibility: 'off' }] }, { featureType: 'water', elementType: 'geometry', stylers: [{ color: colors.f }] }];\n}\n\nfunction createMap(options) {\n  var deferred = $.Deferred();\n  var container = options.container,\n      address = options.address,\n      zoom = options.zoom,\n      colors = options.colors;\n\n\n  getLatitudeLongitude(address).done(function (latLong) {\n    var map = new google.maps.Map(container, {\n      center: latLong,\n      clickableIcons: false,\n      disableDefaultUI: true,\n      disableDoubleClickZoom: true,\n      gestureHandling: 'none',\n      keyboardShortcuts: false,\n      maxZoom: zoom,\n      minZoom: zoom,\n      scrollWheel: false,\n      styles: getMapStyles(colors),\n      zoom: zoom,\n      zoomControl: false\n    });\n\n    new google.maps.Marker({\n      clickable: false,\n      map: map,\n      position: map.getCenter()\n    });\n\n    map.panBy(0, 0);\n    deferred.resolve(map);\n  }).fail(function (status) {\n    var usageLimits = 'https://developers.google.com/maps/faq#usagelimits';\n    var errorMessage = void 0;\n\n    switch (status) {\n      case 'ZERO_RESULTS':\n        errorMessage = '<p>Unable to find the address:</p> ' + address;\n        break;\n      case 'OVER_QUERY_LIMIT':\n        errorMessage = '\\n            <p>Unable to load Google Maps, you have reached your usage limit.</p>\\n            <p>\\n              Please visit\\n              <a href=\"' + usageLimits + '\" target=\"_blank\">' + usageLimits + '</a>\\n              for more details.\\n            </p>\\n          ';\n        break;\n      default:\n        errorMessage = 'Unable to load Google Maps.';\n        break;\n    }\n\n    deferred.reject(errorMessage);\n  });\n\n  return deferred;\n}\n\nfunction displayErrorInThemeEditor(container, errorMessage) {\n  var isThemeEditor = window.Shopify && window.Shopify.designMode;\n\n  if (!isThemeEditor) {\n    return;\n  }\n\n  container.innerHTML = '<div class=\"map-error-message\">' + errorMessage + '</div>';\n}\n\nvar PxsMap = function PxsMap(section) {\n  var _this = this;\n\n  classCallCheck(this, PxsMap);\n\n  this.map = null;\n\n  var el = section.el.querySelector('[data-map]');\n  var container = el.querySelector('[data-map-container]');\n  var settings = section.data;\n  var address = settings.address,\n      colors = settings.colors;\n\n  var apiKey = settings.api_key;\n  // Scale so range is 12 ~ 17, rather than 1 to 6\n  var zoom = Number.isNaN(settings.zoom) ? 13 : 11 + parseInt(settings.zoom, 10);\n\n  if (apiKey) {\n    if (window.googleMaps === undefined) {\n      $script('https://maps.googleapis.com/maps/api/js?key=' + apiKey, function () {\n        window.googleMaps = true;\n        createMap({\n          container: container,\n          address: address,\n          zoom: zoom,\n          colors: colors\n        }).done(function (map) {\n          _this.map = map;\n        }).fail(function (error) {\n          return displayErrorInThemeEditor(container, error);\n        });\n      });\n    } else {\n      createMap({\n        container: container,\n        address: address,\n        zoom: zoom,\n        colors: colors\n      }).done(function (map) {\n        _this.map = map;\n      }).fail(function (error) {\n        return displayErrorInThemeEditor(container, error);\n      });\n    }\n  }\n};\n\nexport default PxsMap;\n","\n'use strict'\n\nvar selectors = [\n\t'iframe[src*=\"player.vimeo.com\"]',\n\t'iframe[src*=\"youtube.com\"]',\n\t'iframe[src*=\"youtube-nocookie.com\"]',\n\t'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n\t'object'\n]\n\nvar css = '.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}'\n\nmodule.exports = function (parentSelector, opts) {\n\tparentSelector = parentSelector || 'body'\n\topts = opts || {}\n\n\tif (isObject(parentSelector)) {\n\t\topts = parentSelector\n\t\tparentSelector = 'body'\n\t}\n\n\topts.ignore = opts.ignore || ''\n\topts.players = opts.players || ''\n\n\tvar containers = queryAll(parentSelector)\n\tif (!hasLength(containers)) return\n\n\tif (!document.getElementById('fit-vids-style')) {\n\t\tvar head = document.head || document.getElementsByTagName('head')[0]\n\t\thead.appendChild(styles())\n\t}\n\n\tvar custom = toSelectorArray(opts.players) || []\n\tvar ignored = toSelectorArray(opts.ignore) || []\n\tvar selector = selectors\n\t\t.filter(notIgnored(ignored))\n\t\t.concat(custom)\n\t\t.join()\n\n\tif (!hasLength(selector)) return\n\n\tcontainers.forEach(function (container) {\n\t\tvar videos = queryAll(container, selector)\n\t\tvideos.forEach(function (video) {\n\t\t\twrap(video)\n\t\t})\n\t})\n}\n\nfunction queryAll (el, selector) {\n\tif (typeof el === 'string') {\n\t\tselector = el\n\t\tel = document\n\t}\n\treturn Array.prototype.slice.call(el.querySelectorAll(selector))\n}\n\nfunction toSelectorArray (input) {\n\tif (typeof input === 'string') {\n\t\treturn input.split(',').map(trim).filter(hasLength)\n\t} else if (isArray(input)) {\n\t\treturn flatten(input.map(toSelectorArray).filter(hasLength))\n\t}\n\treturn input || []\n}\n\nfunction wrap (el) {\n\tif (/fluid-width-video-wrapper/.test(el.parentNode.className)) return\n\n\tvar widthAttr = parseInt(el.getAttribute('width'), 10)\n\tvar heightAttr = parseInt(el.getAttribute('height'), 10)\n\n\tvar width = !isNaN(widthAttr) ? widthAttr : el.clientWidth\n\tvar height = !isNaN(heightAttr) ? heightAttr : el.clientHeight\n\tvar aspect = height / width\n\n\tel.removeAttribute('width')\n\tel.removeAttribute('height')\n\n\tvar wrapper = document.createElement('div')\n\tel.parentNode.insertBefore(wrapper, el)\n\twrapper.className = 'fluid-width-video-wrapper'\n\twrapper.style.paddingTop = (aspect * 100) + '%'\n\twrapper.appendChild(el)\n}\n\nfunction styles () {\n\tvar div = document.createElement('div')\n\tdiv.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>'\n\treturn div.childNodes[1]\n}\n\nfunction notIgnored (ignored) {\n\tif (ignored.length < 1) {\n\t\treturn function () {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn function (selector) {\n\t\treturn ignored.indexOf(selector) === -1\n\t}\n}\n\nfunction hasLength (input) {\n\treturn input.length > 0\n}\n\nfunction trim (str) {\n\treturn str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction flatten (input) {\n\treturn [].concat.apply([], input)\n}\n\nfunction isObject (input) {\n\treturn Object.prototype.toString.call(input) === '[object Object]'\n}\n\nfunction isArray (input) {\n\treturn Object.prototype.toString.call(input) === '[object Array]'\n}\n","'use strict';\n\n// forEach method, could be shipped as part of an Object Literal/Module\nfunction forEach(array, callback, scope) {\n  var index = 0;\n\n  for (index = 0; index < array.length; index += 1) {\n    callback.call(scope, array[index], index); // passes back stuff we need\n  }\n}\n\nfunction hasClass(el, className) {\n  var regex = new RegExp('^' + className + '| +' + className, 'g');\n\n  return el.className.match(regex);\n}\n\nfunction addClass(el, className) {\n  // Return if it already has the className\n  if (hasClass(el, className)) return;\n\n  el.className += ' ' + className;\n}\n\nfunction removeClass(el, className) {\n  // Return if it doesn't already have the className\n  if (!hasClass(el, className)) return;\n\n  var regex = new RegExp('^' + className + '| +' + className, 'g');\n\n  el.className = el.className.replace(regex, '');\n}\n\nfunction toggleClass(el, className) {\n  if (hasClass(el, className)) {\n    removeClass(el, className);\n  } else {\n    addClass(el, className);\n  }\n}\n\nfunction findPairingFromPairingTrigger(pairings, pairingTrigger) {\n  var foundPairing = null;\n\n  forEach(pairings, function (pairing) {\n    if (pairing.trigger === pairingTrigger) {\n      foundPairing = pairing;\n    }\n  });\n\n  return foundPairing;\n}\n\n/**\n * See {@link https://stackoverflow.com/revisions/2117523/11 Stack Overflow}\n * An RFC4122 v4 compliant uuid solution\n */\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n\n    return v.toString(16);\n  });\n}\n\nfunction init(groupedContent) {\n  var triggers = groupedContent.triggers;\n  var pairings = groupedContent.pairings;\n\n  triggers.setAttribute('role', 'tablist');\n\n  forEach(pairings, function (pairing, index) {\n    pairing.trigger.setAttribute('role', 'tab');\n    pairing.trigger.setAttribute('aria-controls', groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content');\n\n    if (pairing.trigger.children.length > 0) {\n      forEach(pairing.trigger.children, function (child) {\n        child.setAttribute('tabIndex', '-1');\n      });\n    }\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-selected', 'true');\n      pairing.trigger.setAttribute('tabIndex', '0');\n    } else {\n      pairing.trigger.setAttribute('tabIndex', '-1');\n    }\n\n    pairing.content.id = groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content';\n    pairing.content.setAttribute('role', 'tabpanel');\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nfunction update(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing) {\n    pairing.trigger.removeAttribute('aria-selected');\n    pairing.content.removeAttribute('aria-hidden');\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-selected', 'true');\n      pairing.trigger.setAttribute('tabIndex', '0');\n    } else {\n      pairing.trigger.setAttribute('tabIndex', '-1');\n    }\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nvar a11y = {\n  init: init,\n  update: update\n};\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/** A class for creating, managing, and destroying groupable content as tabs. */\n\nvar TabsLayout = function () {\n  function TabsLayout(groupedContent) {\n    classCallCheck(this, TabsLayout);\n\n    this.groupedContent = groupedContent;\n    this.pairings = groupedContent.pairings;\n    this.events = [];\n\n    this._handleKeydown = this._handleKeydown.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n\n    this._init();\n    a11y.init(this.groupedContent);\n  }\n\n  createClass(TabsLayout, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.events, function (event) {\n        event.trigger.removeEventListener(event.type, event.fn);\n      });\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      var _this = this;\n\n      var existingActive = false;\n\n      forEach(this.pairings, function (pairing) {\n        var trigger = pairing.trigger;\n\n        if (hasClass(trigger, 'active')) {\n          existingActive = true;\n        }\n\n        trigger.addEventListener('keydown', _this._handleKeydown);\n        trigger.addEventListener('click', _this._handleClick);\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'keydown',\n          fn: _this._handleKeydown\n        });\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'click',\n          fn: _this._handleClick\n        });\n      });\n\n      if (!existingActive) {\n        addClass(this.pairings[0].trigger, 'active');\n        addClass(this.pairings[0].content, 'active');\n      }\n    }\n  }, {\n    key: '_handleKeydown',\n    value: function _handleKeydown(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n      var pairingIndex = this.pairings.indexOf(pairing);\n      var prevIndex = pairingIndex - 1 < 0 ? this.pairings.length - 1 : pairingIndex - 1;\n      var nextIndex = pairingIndex + 1 >= this.pairings.length ? 0 : pairingIndex + 1;\n\n      var nextPairing = null;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n          nextPairing = this.pairings[prevIndex];\n          break;\n        case 'ArrowRight':\n          nextPairing = this.pairings[nextIndex];\n          break;\n        default:\n          nextPairing = null;\n          break;\n      }\n\n      // Fast exit if we can't find the tab or tabs\n      if (nextPairing === null) return;\n\n      event.preventDefault();\n\n      forEach(this.pairings, function (inactivePairing) {\n        removeClass(inactivePairing.trigger, 'active');\n        removeClass(inactivePairing.content, 'active');\n      });\n\n      addClass(nextPairing.trigger, 'active');\n      addClass(nextPairing.content, 'active');\n\n      nextPairing.trigger.focus();\n\n      a11y.update(this.groupedContent);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if we can't find the tab or tabs\n      if (pairing === null) return;\n\n      event.preventDefault();\n\n      forEach(this.pairings, function (inactivePairing) {\n        removeClass(inactivePairing.trigger, 'active');\n        removeClass(inactivePairing.content, 'active');\n      });\n\n      addClass(pairing.trigger, 'active');\n      addClass(pairing.content, 'active');\n\n      a11y.update(this.groupedContent);\n    }\n  }]);\n  return TabsLayout;\n}();\n\nfunction init$1(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing, index) {\n    pairing.trigger.setAttribute('role', 'button');\n    pairing.trigger.setAttribute('aria-controls', groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content');\n    pairing.trigger.setAttribute('tabIndex', '0');\n\n    if (pairing.trigger.children.length > 0) {\n      forEach(pairing.trigger.children, function (child) {\n        child.setAttribute('tabIndex', '-1');\n      });\n    }\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-expanded', 'true');\n    } else {\n      pairing.trigger.setAttribute('aria-expanded', 'false');\n    }\n\n    pairing.content.id = groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content';\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nfunction update$1(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing) {\n    pairing.content.removeAttribute('aria-hidden');\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-expanded', 'true');\n    } else {\n      pairing.trigger.setAttribute('aria-expanded', 'false');\n    }\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nvar a11y$1 = {\n  init: init$1,\n  update: update$1\n};\n\n/** A class for creating, managing, and destroying groupable content as an accordion. */\n\nvar AccordionLayout = function () {\n  function AccordionLayout(groupedContent) {\n    classCallCheck(this, AccordionLayout);\n\n    this.groupedContent = groupedContent;\n    this.pairings = groupedContent.pairings;\n    this.events = [];\n\n    this._handleKeydown = this._handleKeydown.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n\n    this._init(this.pairings);\n    a11y$1.init(this.groupedContent);\n  }\n\n  createClass(AccordionLayout, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.events, function (event) {\n        event.trigger.removeEventListener(event.type, event.fn);\n      });\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      var _this = this;\n\n      forEach(this.pairings, function (pairing) {\n        var trigger = pairing.trigger;\n        var content = pairing.content;\n\n        trigger.parentNode.insertBefore(content, trigger.nextSibling);\n\n        trigger.addEventListener('keydown', _this._handleKeydown);\n        trigger.addEventListener('click', _this._handleClick);\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'keydown',\n          fn: _this._handleKeydown\n        });\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'click',\n          fn: _this._handleClick\n        });\n      });\n\n      this.groupedContent.contents.remove();\n    }\n  }, {\n    key: '_handleKeydown',\n    value: function _handleKeydown(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if enter isn't pressed or we can't find the group\n      if (event.key !== 'Enter' || pairing === null) return;\n\n      event.preventDefault();\n\n      toggleClass(pairing.trigger, 'active');\n      toggleClass(pairing.content, 'active');\n      a11y$1.update(this.groupedContent);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if we can't find the group\n      if (pairing === null) return;\n\n      event.preventDefault();\n\n      toggleClass(pairing.trigger, 'active');\n      toggleClass(pairing.content, 'active');\n      a11y$1.update(this.groupedContent);\n    }\n  }]);\n  return AccordionLayout;\n}();\n\n/**\n * Returns an array of nodes related to the heading node.\n * @param {node} heading - The heading node to search for content from.\n * @returns {node[]}\n */\nfunction getHeadingContent(heading) {\n  var headingTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  var tagNameIndex = headingTagNames.indexOf(heading.tagName);\n  var content = [];\n\n  var sibling = heading.nextElementSibling;\n\n  while (sibling !== null && (headingTagNames.indexOf(sibling.tagName) === -1 || headingTagNames.indexOf(sibling.tagName) > tagNameIndex)) {\n    content.push(sibling);\n\n    sibling = sibling.nextElementSibling;\n  }\n\n  return content;\n}\n\n/**\n * Returns an object array representing the heading tree from a given node.\n * Root nodes are evaluated differently, and requires the evaluatingRoot flag\n * to be true.\n * @param {node} el - The node being evaluated.\n * @param {node[]} children - The children of the evaluated node.\n * @param {boolean} [evaluatingRoot] - Whether to evaluate as root node.\n * @returns {Object[]}\n */\nfunction getHeadingTree(el, children) {\n  var evaluatingRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var headingTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  var tagNameIndex = headingTagNames.indexOf(el.tagName);\n  var headings = [];\n\n  var currentLowestTagNameIndex = 5;\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var childTagNameIndex = headingTagNames.indexOf(child.tagName);\n\n    if (childTagNameIndex !== -1 && childTagNameIndex < currentLowestTagNameIndex) {\n      currentLowestTagNameIndex = childTagNameIndex;\n    }\n\n    if (evaluatingRoot && childTagNameIndex !== -1 && childTagNameIndex <= currentLowestTagNameIndex || !evaluatingRoot && childTagNameIndex !== -1 && childTagNameIndex === tagNameIndex + 1) {\n      var siblings = getHeadingContent(child);\n\n      var childNode = {\n        el: child,\n        content: siblings,\n        children: getHeadingTree(child, siblings)\n      };\n\n      headings.push(childNode);\n    }\n  }\n\n  return headings;\n}\n\n/**\n * Returns groupings of headings that meet the minimum sequence value\n * and don't contain any invalid headings.\n * @param {Object[]} headings - An array of heading objects.\n * @param {int[]} invalidHeadings - An array of invalid heading integers,\n *                                  representing indexes of headings.\n * @param {*} minInSequence - Minimum headings in sequence before being considered\n *                            as a grouping.\n * @returns {Object[][]}\n */\nfunction getHeadingGroupsInSequence(headings, invalidHeadings, minInSequence) {\n  var headingGroupsInSequence = [];\n  var currentHeadingGroupInSequence = [];\n  var currentSequence = 0;\n\n  for (var i = 0; i < headings.length; i += 1) {\n    if (invalidHeadings.indexOf(i) === -1) {\n      currentHeadingGroupInSequence.push(headings[i]);\n      currentSequence += 1;\n\n      if (i !== headings.length - 1 && headings[i].el.tagName !== headings[i + 1].el.tagName && invalidHeadings.indexOf(i + 1)) {\n        currentHeadingGroupInSequence = [];\n        currentSequence = 0;\n      } else if (i !== 0 && headings[i].el.tagName !== headings[i - 1].el.tagName) {\n        currentHeadingGroupInSequence.pop();\n        currentSequence -= 1;\n\n        if (currentSequence >= minInSequence) {\n          headingGroupsInSequence.push(currentHeadingGroupInSequence);\n        }\n\n        currentHeadingGroupInSequence = [headings[i]];\n        currentSequence = 1;\n      }\n    }\n  }\n\n  if (currentSequence >= minInSequence) {\n    headingGroupsInSequence.push(currentHeadingGroupInSequence);\n  }\n\n  return headingGroupsInSequence;\n}\n\n/**\n * Generates necessary DOM elements to group related content.\n * Returns a object array representing the grouped content.\n * @param {Object[]} children - An array of objects.\n * @returns {Object[]}\n */\nfunction createGroupedContent(children) {\n  var pairings = [];\n\n  var firstChild = children[0].el;\n  var triggers = document.createElement('div');\n  var contents = document.createElement('div');\n\n  contents = firstChild.parentNode.insertBefore(contents, firstChild.nextSibling);\n  triggers = firstChild.parentNode.insertBefore(triggers, firstChild.nextSibling);\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var trigger = child.el;\n    var content = document.createElement('div');\n\n    trigger = triggers.appendChild(trigger);\n    content = contents.appendChild(content);\n\n    for (var j = 0; j < child.content.length; j += 1) {\n      content.appendChild(child.content[j]);\n    }\n\n    pairings.push({\n      trigger: trigger,\n      content: content\n    });\n  }\n\n  return {\n    triggers: triggers,\n    contents: contents,\n    pairings: pairings\n  };\n}\n\n/**\n * Returns all groupable content within the supplied node.\n * @param {node} node - A node to traverse for groupable content.\n * @returns {Object[][]}\n */\n/*\n * Recursive function:\n *  Returns all groups of headings that\n *  are elegible to become grouped content.\n */\nfunction getGroupedContentSet(node) {\n  var children = node.children;\n  var childrenWithGroupableContent = [];\n  var groupedContentSet = [];\n\n  if (children.length === 0) {\n    return [];\n  }\n\n  for (var i = 0; i < children.length; i += 1) {\n    var childGroupableContent = getGroupedContentSet(children[i]);\n\n    if (childGroupableContent.length > 0) {\n      childrenWithGroupableContent.push(i);\n      groupedContentSet = groupedContentSet.concat(childGroupableContent);\n    }\n  }\n\n  var headingGroupsInSequence = getHeadingGroupsInSequence(children, childrenWithGroupableContent, 3);\n\n  for (var _i = 0; _i < headingGroupsInSequence.length; _i += 1) {\n    groupedContentSet.push(createGroupedContent(headingGroupsInSequence[_i]));\n  }\n\n  return groupedContentSet;\n}\n\n/**\n * When static parsing isn't enough, there's intelliparse™!\n * Searches through dom content to find heading groupings that\n * are elegible to become tab groups.\n * Assumes that content is in a flattened hierarchy in the dom\n * and interprets increasing heading values as a deeper level of nesting.\n * Returns all groupable content as an array of object arrays.\n * @param {node} el - The node who's content will be searched for groupable content.\n * @returns {Object[][]}\n */\nfunction intelliParse(el) {\n  var children = el.children;\n  var heading = el.querySelector('h1, h2, h3, h4, h5, h6');\n\n  // Fast return if there's no headings\n  if (children.length === 0) return [];\n\n  var rootNode = {\n    el: el,\n    content: null,\n    children: getHeadingTree(heading, children, true)\n  };\n\n  return getGroupedContentSet(rootNode);\n}\n\n/**\n * Parses content from a given node based on a static structure.\n * The structure is as follows:\n * <ul class=\"tabs\">\n *   <li class=\"active\">Tab 1</li>\n *   <li>Tab 2</li>\n *   <li>Tab 3</li>\n * </ul>\n *\n * <ul class=\"tabs-content\">\n *   <li class=\"active\">\n *     <p>Tab 1 content goes here.</p>\n *   </li>\n *   <li>\n *     <p>Tab 2 content goes here.</p>\n *   </li>\n *   <li>\n *     <p>Tab 3 content goes here.</p>\n *   </li>\n * </ul>\n * Returns all groupable content as an array of object arrays.\n * @param {node} el - The node who's content will be searched for groupable content.\n * @returns {Object[][]}\n */\nfunction staticParse(el) {\n  var groupedContentSet = [];\n\n  var tabs = el.querySelectorAll('.tabs');\n\n  for (var i = 0; i < tabs.length; i += 1) {\n    var triggers = tabs[i].children;\n    var contents = tabs[i].nextElementSibling.children;\n\n    // Only add a tab group if equal triggers to contents\n    if (triggers.length === contents.length) {\n      var length = groupedContentSet.push({\n        triggers: tabs[i],\n        contents: tabs[i].nextElementSibling,\n        pairings: []\n      });\n      var index = length - 1;\n\n      for (var j = 0; j < triggers.length; j += 1) {\n        var trigger = triggers[j];\n        var content = contents[j];\n\n        var pairing = {\n          trigger: trigger,\n          content: content\n        };\n\n        groupedContentSet[index].pairings.push(pairing);\n      }\n    }\n  }\n\n  return groupedContentSet;\n}\n\n/**\n * Returns all groupable content as an array of object arrays.\n * @param {node} content - The node to parse for groupable content.\n * @param {boolean} intelliparse - Whether to use intelligent parsing.\n * @returns {Object[][]}\n */\nfunction parse(content) {\n  var intelliparse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var groupedContentSet = intelliparse ? intelliParse(content) : staticParse(content);\n\n  return groupedContentSet;\n}\n\n/** A class for creating, managing, and destroying groupable content. */\n\nvar GroupedContent = function () {\n  /**\n   * Create grouped content\n   * @param {node} el - The element to search for groupable content in.\n   * @param {Object}  [options] - Additional options\n   * @param {string}  [options.layout] - The layout to display groupable content in.\n   * @param {boolean} [options.intelliparse] - The parsing algorithm used to find content with.\n   */\n  function GroupedContent(el) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, GroupedContent);\n\n    this.namespace = 'grouped-content';\n    this.el = el;\n    this.groupedContentInstances = [];\n\n    var layout = options.layout || 'tabs';\n    var intelliparse = !!options.intelliparse;\n\n    forEach(parse(el, intelliparse), function (groupedContent) {\n      var id = uuidv4();\n      var instance = null;\n      var groupedContentWrapper = document.createElement('div');\n\n      groupedContentWrapper = groupedContent.triggers.parentNode.insertBefore(groupedContentWrapper, groupedContent.triggers.nextSibling);\n\n      addClass(groupedContentWrapper, _this.namespace);\n      addClass(groupedContentWrapper, _this.namespace + '-layout-' + layout);\n\n      groupedContentWrapper.appendChild(groupedContent.triggers);\n      groupedContentWrapper.appendChild(groupedContent.contents);\n\n      groupedContent.namespace = _this.namespace;\n      groupedContent.id = id;\n      groupedContent.triggers.id = _this.namespace + '-' + id + '-triggers';\n      groupedContent.contents.id = _this.namespace + '-' + id + '-contents';\n\n      addClass(groupedContent.triggers, _this.namespace + '-triggers');\n      addClass(groupedContent.contents, _this.namespace + '-contents');\n\n      forEach(groupedContent.pairings, function (pairing) {\n        addClass(pairing.trigger, _this.namespace + '-trigger');\n        addClass(pairing.content, _this.namespace + '-content');\n      });\n\n      switch (layout) {\n        case 'accordion':\n          instance = new AccordionLayout(groupedContent);\n          break;\n        case 'tabs':\n        default:\n          instance = new TabsLayout(groupedContent);\n          break;\n      }\n\n      _this.groupedContentInstances.push({\n        groupedContent: groupedContent,\n        instance: instance\n      });\n    });\n  }\n\n  /** Unload all grouped content instances */\n\n\n  createClass(GroupedContent, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.groupedContentInstances, function (groupedContentInstance) {\n        groupedContentInstance.instance.unload();\n      });\n    }\n  }]);\n  return GroupedContent;\n}();\n\nmodule.exports = GroupedContent;\n","import $ from 'jquery';\nimport fitvids from 'fitvids';\nimport GroupedContent from 'grouped-content';\n\nfunction updateOption(e, selector) {\n  const select = e ? $(e.target) : $(selector);\n\n  const newOption = select.find('option:selected').text();\n  select.siblings('.selected-text').text(newOption);\n}\n\nexport default class Rte {\n  constructor({ el }) {\n    this.$el = $(el);\n    this.setupTabs();\n    this._bindEvents();\n\n    fitvids('.rte', {\n      customSelector: 'iframe',\n      ignore: \"[data-shop='embeds.myshopify.com']\",\n    });\n\n    $('select', this.$el).each((index, select) => {\n      if (!$(select).parent('.select-wrapper').length) {\n        $(select).wrap('<div class=\"select-wrapper\" />').parent().prepend(\"<span class='selected-text'></span>\");\n      }\n      updateOption(null, select);\n    });\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.select-wrapper select', this.$el).on('change', updateOption),\n    ];\n  }\n\n  setupTabs() {\n    this.groupedContent = new GroupedContent(this.$el.get(0), { layout: 'tabs', intelliparse: false });\n  }\n}\n","import $ from 'jquery';\n\nexport default {\n\n  extend(dest, ...objs) {\n    for (const obj in objs) {\n      for (const k in objs[obj]) {\n        const v = objs[obj][k];\n        dest[k] = v;\n      }\n    }\n    return dest;\n  },\n\n  windowWidth() {\n    return window.innerWidth || this.window.width();\n  },\n\n  debounce(func, wait, immediate) {\n    let timeout = null;\n    return function () {\n      const context = this;\n      const args = arguments;\n\n      const later = function () {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      };\n\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n  },\n\n  inViewport(el) {\n    // special bonus for those using jQuery\n    if ((typeof $ === 'function') && el instanceof $) {\n      el = el[0];\n    }\n\n    const rect = el.getBoundingClientRect();\n\n    const bounds = {\n      top: rect.top >= 0,\n      bottom: rect.bottom <= (window.innerHeight || document.documentElement.clientHeight),\n    };\n\n    return bounds.top && bounds.bottom;\n  },\n\n  unique(array) {\n    let key;\n    let asc; let\n      end;\n    const output = {};\n    for (key = 0, end = array.length, asc = end >= 0; asc ? key < end : key > end; asc ? key++ : key--) { output[array[key]] = array[key]; }\n    return (() => {\n      const result = [];\n      for (key in output) {\n        const value = output[key];\n        result.push(value);\n      }\n      return result;\n    })();\n  },\n};\n","export default class ModalContent {\n  constructor(content) {\n    this.content = {\n      title: content.title || '',\n      message: content.message || '',\n      button: content.button || false,\n    };\n  }\n}\n","/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n","/*!\n * imagesLoaded v4.1.4\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n\n( function( window, factory ) { 'use strict';\n  // universal module definition\n\n  /*global define: false, module: false, require: false */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter'\n    ], function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter')\n    );\n  } else {\n    // browser global\n    window.imagesLoaded = factory(\n      window,\n      window.EvEmitter\n    );\n  }\n\n})( typeof window !== 'undefined' ? window : this,\n\n// --------------------------  factory -------------------------- //\n\nfunction factory( window, EvEmitter ) {\n\n'use strict';\n\nvar $ = window.jQuery;\nvar console = window.console;\n\n// -------------------------- helpers -------------------------- //\n\n// extend objects\nfunction extend( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n}\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nfunction makeArray( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n}\n\n// -------------------------- imagesLoaded -------------------------- //\n\n/**\n * @param {Array, Element, NodeList, String} elem\n * @param {Object or Function} options - if function, use as callback\n * @param {Function} onAlways - callback function\n */\nfunction ImagesLoaded( elem, options, onAlways ) {\n  // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n  if ( !( this instanceof ImagesLoaded ) ) {\n    return new ImagesLoaded( elem, options, onAlways );\n  }\n  // use elem as selector string\n  var queryElem = elem;\n  if ( typeof elem == 'string' ) {\n    queryElem = document.querySelectorAll( elem );\n  }\n  // bail if bad element\n  if ( !queryElem ) {\n    console.error( 'Bad element for imagesLoaded ' + ( queryElem || elem ) );\n    return;\n  }\n\n  this.elements = makeArray( queryElem );\n  this.options = extend( {}, this.options );\n  // shift arguments if no options set\n  if ( typeof options == 'function' ) {\n    onAlways = options;\n  } else {\n    extend( this.options, options );\n  }\n\n  if ( onAlways ) {\n    this.on( 'always', onAlways );\n  }\n\n  this.getImages();\n\n  if ( $ ) {\n    // add jQuery Deferred object\n    this.jqDeferred = new $.Deferred();\n  }\n\n  // HACK check async to allow time to bind listeners\n  setTimeout( this.check.bind( this ) );\n}\n\nImagesLoaded.prototype = Object.create( EvEmitter.prototype );\n\nImagesLoaded.prototype.options = {};\n\nImagesLoaded.prototype.getImages = function() {\n  this.images = [];\n\n  // filter & find items if we have an item selector\n  this.elements.forEach( this.addElementImages, this );\n};\n\n/**\n * @param {Node} element\n */\nImagesLoaded.prototype.addElementImages = function( elem ) {\n  // filter siblings\n  if ( elem.nodeName == 'IMG' ) {\n    this.addImage( elem );\n  }\n  // get background image on element\n  if ( this.options.background === true ) {\n    this.addElementBackgroundImages( elem );\n  }\n\n  // find children\n  // no non-element nodes, #143\n  var nodeType = elem.nodeType;\n  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\n    return;\n  }\n  var childImgs = elem.querySelectorAll('img');\n  // concat childElems to filterFound array\n  for ( var i=0; i < childImgs.length; i++ ) {\n    var img = childImgs[i];\n    this.addImage( img );\n  }\n\n  // get child background images\n  if ( typeof this.options.background == 'string' ) {\n    var children = elem.querySelectorAll( this.options.background );\n    for ( i=0; i < children.length; i++ ) {\n      var child = children[i];\n      this.addElementBackgroundImages( child );\n    }\n  }\n};\n\nvar elementNodeTypes = {\n  1: true,\n  9: true,\n  11: true\n};\n\nImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    // Firefox returns null if in a hidden iframe https://bugzil.la/548397\n    return;\n  }\n  // get url inside url(\"...\")\n  var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\n  var matches = reURL.exec( style.backgroundImage );\n  while ( matches !== null ) {\n    var url = matches && matches[2];\n    if ( url ) {\n      this.addBackground( url, elem );\n    }\n    matches = reURL.exec( style.backgroundImage );\n  }\n};\n\n/**\n * @param {Image} img\n */\nImagesLoaded.prototype.addImage = function( img ) {\n  var loadingImage = new LoadingImage( img );\n  this.images.push( loadingImage );\n};\n\nImagesLoaded.prototype.addBackground = function( url, elem ) {\n  var background = new Background( url, elem );\n  this.images.push( background );\n};\n\nImagesLoaded.prototype.check = function() {\n  var _this = this;\n  this.progressedCount = 0;\n  this.hasAnyBroken = false;\n  // complete if no images\n  if ( !this.images.length ) {\n    this.complete();\n    return;\n  }\n\n  function onProgress( image, elem, message ) {\n    // HACK - Chrome triggers event before object properties have changed. #83\n    setTimeout( function() {\n      _this.progress( image, elem, message );\n    });\n  }\n\n  this.images.forEach( function( loadingImage ) {\n    loadingImage.once( 'progress', onProgress );\n    loadingImage.check();\n  });\n};\n\nImagesLoaded.prototype.progress = function( image, elem, message ) {\n  this.progressedCount++;\n  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n  // progress event\n  this.emitEvent( 'progress', [ this, image, elem ] );\n  if ( this.jqDeferred && this.jqDeferred.notify ) {\n    this.jqDeferred.notify( this, image );\n  }\n  // check if completed\n  if ( this.progressedCount == this.images.length ) {\n    this.complete();\n  }\n\n  if ( this.options.debug && console ) {\n    console.log( 'progress: ' + message, image, elem );\n  }\n};\n\nImagesLoaded.prototype.complete = function() {\n  var eventName = this.hasAnyBroken ? 'fail' : 'done';\n  this.isComplete = true;\n  this.emitEvent( eventName, [ this ] );\n  this.emitEvent( 'always', [ this ] );\n  if ( this.jqDeferred ) {\n    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';\n    this.jqDeferred[ jqMethod ]( this );\n  }\n};\n\n// --------------------------  -------------------------- //\n\nfunction LoadingImage( img ) {\n  this.img = img;\n}\n\nLoadingImage.prototype = Object.create( EvEmitter.prototype );\n\nLoadingImage.prototype.check = function() {\n  // If complete is true and browser supports natural sizes,\n  // try to check for image status manually.\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    // report based on naturalWidth\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    return;\n  }\n\n  // If none of the checks above matched, simulate loading on detached element.\n  this.proxyImage = new Image();\n  this.proxyImage.addEventListener( 'load', this );\n  this.proxyImage.addEventListener( 'error', this );\n  // bind to image as well for Firefox. #191\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.proxyImage.src = this.img.src;\n};\n\nLoadingImage.prototype.getIsImageComplete = function() {\n  // check for non-zero, non-undefined naturalWidth\n  // fixes Safari+InfiniteScroll+Masonry bug infinite-scroll#671\n  return this.img.complete && this.img.naturalWidth;\n};\n\nLoadingImage.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.img, message ] );\n};\n\n// ----- events ----- //\n\n// trigger specified handler for event type\nLoadingImage.prototype.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nLoadingImage.prototype.onload = function() {\n  this.confirm( true, 'onload' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.onerror = function() {\n  this.confirm( false, 'onerror' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.unbindEvents = function() {\n  this.proxyImage.removeEventListener( 'load', this );\n  this.proxyImage.removeEventListener( 'error', this );\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\n// -------------------------- Background -------------------------- //\n\nfunction Background( url, element ) {\n  this.url = url;\n  this.element = element;\n  this.img = new Image();\n}\n\n// inherit LoadingImage prototype\nBackground.prototype = Object.create( LoadingImage.prototype );\n\nBackground.prototype.check = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.img.src = this.url;\n  // check if image is already complete\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    this.unbindEvents();\n  }\n};\n\nBackground.prototype.unbindEvents = function() {\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\nBackground.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.element, message ] );\n};\n\n// -------------------------- jQuery -------------------------- //\n\nImagesLoaded.makeJQueryPlugin = function( jQuery ) {\n  jQuery = jQuery || window.jQuery;\n  if ( !jQuery ) {\n    return;\n  }\n  // set local variable\n  $ = jQuery;\n  // $().imagesLoaded()\n  $.fn.imagesLoaded = function( options, callback ) {\n    var instance = new ImagesLoaded( this, options, callback );\n    return instance.jqDeferred.promise( $(this) );\n  };\n};\n// try making plugin\nImagesLoaded.makeJQueryPlugin();\n\n// --------------------------  -------------------------- //\n\nreturn ImagesLoaded;\n\n});\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import $ from 'jquery';\nimport imagesLoaded from 'imagesloaded';\nimport debounce from 'debounce';\n\nexport default class ModalView {\n  constructor({ model, el }) {\n    this.$el = $(el);\n    this.content = model.content;\n    this.body = $(document.body);\n    this._bindEvents();\n    this.enterContent();\n    this.openModal();\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.modal-close', this.$el).on('click.modal-view', event => this.closeModal(event)),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.modal-view'));\n  }\n\n  enterContent() {\n    if (this.content.title) {\n      $('.modal-title', this.$el).text(this.content.title);\n    }\n\n    if (this.content.message) {\n      $('.modal-message', this.$el).html(this.content.message);\n    }\n\n    if (this.content.button) {\n      $('.modal-message', this.$el).append(`<p><span class='modal-close button'>${this.content.button}</span></p>`);\n    }\n  }\n\n  centerModal() {\n    const modalContentHeight = $('.modal-content', this.$el).outerHeight();\n    const modalContentWidth = $('.modal-content', this.$el).outerWidth();\n\n    if (modalContentHeight > $(window).height()) {\n      $('.modal-content', this.$el).css({\n        marginTop: 0,\n        marginLeft: -(modalContentWidth / 2),\n      });\n\n      this.body.addClass('modal-overflow');\n    } else {\n      $('.modal-content', this.$el).css({\n        marginTop: -(modalContentHeight / 2),\n        marginLeft: -(modalContentWidth / 2),\n      });\n\n      this.body.removeClass('modal-overflow');\n    }\n  }\n\n  openModal() {\n    this.$el.addClass('active');\n\n    setTimeout(() => this.$el.addClass('opening'),\n      20);\n\n    imagesLoaded(this.$el[0], () => {\n      this.centerModal();\n      $(window).on('resize', debounce(() => this.centerModal(), 50));\n      this.$el.addClass('open');\n    });\n\n    this.body.on('keyup.modal', (e) => {\n      if (e && (e.type === 'keyup') && (e.keyCode === 27)) {\n        this.closeModal();\n      }\n    });\n  }\n\n  closeModal() {\n    this.body.off('keyup.modal');\n    this.$el.removeClass('open');\n\n    this.events.push(this.$el.one('transitionend.modal-view', () => {\n      this.$el.removeClass('opening');\n      this.$el.removeClass('active');\n      this.body.removeClass('modal-overflow');\n      this._unbindEvents();\n    }));\n\n  }\n}\n","import $ from 'jquery';\nimport ModalContent from '../components/ModalContent';\nimport ModalView from '../components/ModalView';\n\nfunction recoverPassword() {\n  $('.recover-password').toggle();\n  $('.customer-login').toggle();\n}\n\nfunction checkForReset() {\n  if ($('.reset-check').data('successful-reset') === true) {\n    $('.successful-reset').show();\n  }\n}\n\nfunction deleteAddress(e) {\n  const addressID = $(e.target).parents('[data-address-id]').data('address-id');\n  Shopify.CustomerAddress.destroy(addressID);\n}\n\nfunction editAddress(e) {\n  const addressID = $(e.target).parents('[data-address-id]').data('address-id');\n\n  const modalContent = new ModalContent({\n    title: false,\n    message: false,\n  });\n\n  return new ModalView({\n    model: modalContent,\n    el: $(`.modal-wrapper[data-address-id='${addressID}']`),\n  });\n}\n\nfunction cancelEditing(e) {\n  const addressID = $(e.target).parents('[data-address-id]').data('address-id');\n  $(`.customer-address[data-address-id='${addressID}']`).removeClass('editing');\n  $(`.customer-address-edit-form[data-address-id='${addressID}']`).removeClass('show');\n}\n\nfunction toggleNewAddress() {\n  $('.add-new-address').toggle();\n  $('.customer-new-address').toggleClass('show');\n}\n\nexport default class TemplateAccount {\n  constructor({ el }) {\n    this.$el = $(el);\n    this._bindEvents();\n    if ($(document.body).hasClass('template-customers-addresses')) { this.prepareAddresses(); }\n    if ($(document.body).hasClass('template-customers-login')) { checkForReset(); }\n    if (window.location.hash === '#recover') { recoverPassword(); }\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.delete-address', this.$el).on('click.account', event => deleteAddress(event)),\n      $('.edit-address', this.$el).on('click.account', event => editAddress(event)),\n      $('.cancel-edit', this.$el).on('click.account', event => cancelEditing(event)),\n      $('.toggle-new-address', this.$el).on('click.account', event => toggleNewAddress(event)),\n      $('.toggle-forgetfulness span', this.$el).on('click.account', event => recoverPassword(event)),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.account'));\n  }\n\n  prepareAddresses() {\n    this.countryProvinceSelector = new Shopify.CountryProvinceSelector('address-country', 'address-province', {\n      hideElement: 'address-province-container',\n    });\n\n    $('.customer-address').each((index, address) => {\n      const addressID = $(address).data('address-id');\n      this.countryProvinceSelector = new Shopify.CountryProvinceSelector(`address-country-${addressID}`, `address-province-${addressID}`, {\n        hideElement: `address-province-container-${addressID}`,\n      });\n    });\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n  }\n}\n","/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n  /* jshint strict: false */ /* globals define, module */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See https://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * Chrome & Safari measure the outer-width on style.width on border-box elems\n   * IE11 & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n  // round value for browser zoom. desandro/masonry#928\n  isBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n  getSize.isBoxSizeOuter = isBoxSizeOuter;\n\n  body.removeChild( div );\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n","/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n","/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\nvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    return obj;\n  }\n  // return empty array if undefined or null. #6\n  if ( obj === null || obj === undefined ) {\n    return [];\n  }\n\n  var isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n  if ( isArrayLike ) {\n    // convert nodeList to array\n    return arraySlice.call( obj );\n  }\n\n  // array of single index\n  return [ obj ];\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  threshold = threshold || 100;\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    clearTimeout( timeout );\n\n    var args = arguments;\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n","/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size'\n      ],\n      factory\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      require('ev-emitter'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Outlayer = {};\n    window.Outlayer.Item = factory(\n      window.EvEmitter,\n      window.getSize\n    );\n  }\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  var x = parseFloat( xValue );\n  var y = parseFloat( yValue );\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  if ( xValue.indexOf('%') != -1 ) {\n    x = ( x / 100 ) * layoutSize.width;\n  }\n  if ( yValue.indexOf('%') != -1 ) {\n    y = ( y / 100 ) * layoutSize.height;\n  }\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var didNotMove = x == this.position.x && y == this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseFloat( x );\n  this.position.y = parseFloat( y );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n","/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size',\n        'fizzy-ui-utils/utils',\n        './item'\n      ],\n      function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./item')\n    );\n  } else {\n    // browser global\n    window.Outlayer = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      window.Outlayer.Item\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n","/*!\n * Masonry v4.2.2\n * Cascading grid layout library\n * https://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Masonry = factory(\n      window.Outlayer,\n      window.getSize\n    );\n  }\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  var proto = Masonry.prototype;\n\n  proto._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n\n  proto.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  proto.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  proto._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ?\n      '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[ colPosMethod ]( colSpan, item );\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for ( var i = colPosition.col; i < setMax; i++ ) {\n      this.colYs[i] = setHeight;\n    }\n\n    return position;\n  };\n\n  proto._getTopColPosition = function( colSpan ) {\n    var colGroup = this._getTopColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n\n    return {\n      col: colGroup.indexOf( minimumY ),\n      y: minimumY,\n    };\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  proto._getTopColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      colGroup[i] = this._getColGroupY( i, colSpan );\n    }\n    return colGroup;\n  };\n\n  proto._getColGroupY = function( col, colSpan ) {\n    if ( colSpan < 2 ) {\n      return this.colYs[ col ];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice( col, col + colSpan );\n    // and get the max value of the array\n    return Math.max.apply( Math, groupColYs );\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function( colSpan, item ) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n    return {\n      col: col,\n      y: this._getColGroupY( col, colSpan ),\n    };\n  };\n\n  proto._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  proto._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  proto._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  proto.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n","import $ from 'jquery';\nimport imagesLoaded from 'imagesloaded';\nimport Masonry from 'masonry-layout';\n\nimport ModalContent from '../components/ModalContent';\nimport ModalView from '../components/ModalView';\n\nexport default class TemplateCollection {\n  constructor({ el }) {\n    this.$el = $(el);\n    this._bindEvents();\n    this.validate();\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.collection-filter select', this.$el).on('change.collection', event => this.updateFilter(event)),\n      $('.collection-sorting select', this.$el).on('change.collection', event => this.sortProducts(event)),\n      $('.collection-remove-filter', this.$el).on('click.collection', event => this.resetFilter(event)),\n      $('.collection-description-more', this.$el).on('click.collection', event => this.createModal(event)),\n      $('.collection-sharing-toggle', this.$el).on('click.collection', event => this.toggleSharing(event)),\n      $('.share-buttons', this.$el).on('mouseout.collection', event => this.toggleSharing(event)),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.collection'));\n  }\n\n  validate() {\n    this.section = window.sectionJSON;\n    this.tagsWrapper = $('.collection-tags-wrapper', this.$el);\n    this.tags = this.tagsWrapper.find('.collection-tags', this.$el);\n    this.tagFilter = $('.collection-tags-apply', this.$el);\n\n    if ($('html').hasClass('lt-ie9') && $('.collection-header', this.$el).length) {\n      this.verticallyAlignHeaderText();\n    }\n    if (this.section.collection_filtering) {\n      this.filterProducts();\n    }\n\n    if ($('.collection-products', this.$el).data('layout') === 'masonry') {\n      $('.product-list-item img', this.$el).one('rimg:load', () => {\n        this.masonryLayout();\n      });\n    }\n  }\n\n  verticallyAlignHeaderText() {\n    const headerHeight = $('.collection-details', this.$el).height();\n    $('.collection-details', this.$el).css({ marginTop: -(headerHeight / 2) });\n  }\n\n  toggleSharing(e) {\n    if (e.type === 'mouseout') {\n      if ($(e.relatedTarget).closest('.share-buttons').length) { return; }\n    }\n\n    $('.collection-sharing', this.$el).toggleClass('active');\n  }\n\n  sortProducts(e) {\n    let search;\n    const Sorting = {};\n    Sorting.sort_by = $('.collection-sorting select', this.$el).val();\n\n    if ($(e.target).closest('.collection-sorting').hasClass('vendor-collection')) {\n      const currentSearch = window.location.search;\n      const searchParts = currentSearch.split('&');\n\n      for (let index = 0; index < searchParts.length; index++) {\n        const part = searchParts[index];\n        if (part.indexOf('sort_by') !== -1) {\n          searchParts.splice(index, 1);\n        }\n      }\n\n      search = searchParts.join('&');\n      window.location.search = `${search}&${$.param(Sorting)}`;\n    }\n    window.location.search = $.param(Sorting);\n  }\n\n  masonryLayout() {\n    const $products = $('.collection-products', this.$el);\n\n    if ($('.product-list-item', this.$el).length) {\n      imagesLoaded($products[0], () => {\n        this.events.push($products.one('layoutComplete', () => $products.addClass('processed')));\n        this.masonry = new Masonry($products[0], { transitionDuration: 0 });\n      });\n    } else {\n      $products.addClass('processed empty-collection');\n    }\n  }\n\n  filterProducts() {\n    this.fallbackURL = $('.collection-filtering', this.$el).data('fallback-url');\n\n    $('.collection-filter select', this.$el).each((index, filter) => {\n      if ($(filter).val() !== 'any') {\n        const selectedText = $(filter).find('option:selected').text();\n        $(filter).prev().find('strong').text(selectedText);\n      }\n    });\n  }\n\n  updateFilter(e) {\n    const newTags = [];\n\n    $(e.target).toggleClass('active');\n\n    $('.collection-filter select', this.$el).each((index, filter) => {\n      if ($(filter).val() !== 'any') {\n        const tag = $(filter).val();\n        newTags.push(tag);\n      }\n    });\n\n    if (newTags.length) {\n      const tags = newTags.join('+');\n\n      const filterURL = `${this.fallbackURL}/${tags}`;\n      window.location.href = filterURL;\n    } else {\n      this.resetFilter();\n    }\n  }\n\n  resetFilter() {\n    const fallback = `${this.fallbackURL}${window.location.search}`;\n    window.location.href = fallback;\n  }\n\n  createModal() {\n    const collectionJSON = JSON.parse($('[data-collection-json]', this.$el).text());\n    const modalContent = new ModalContent({\n      title: collectionJSON.title,\n      message: collectionJSON.body_html,\n    });\n\n    this.modalView = new ModalView({\n      model: modalContent,\n      el: $('.modal-wrapper'),\n    });\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n  }\n}\n","import $ from 'jquery';\nimport $script from 'scriptjs';\n\nexport default class TemplateGiftCard {\n  constructor() {\n    const scripts = $('[data-scripts]');\n    $script([scripts.data('qrcode-js-url')], () => {\n      this.addQrCode();\n    });\n  }\n\n  addQrCode() {\n    const qrWrapper = $('[data-qr-code]');\n\n    this.qrCode = new QRCode(qrWrapper[0], {\n      text: qrWrapper.data('qr-code'),\n      width: 120,\n      height: 120,\n    });\n  }\n}\n","import $ from 'jquery';\n\nexport default class TemplateListCollections {\n  constructor({ el }) {\n    this.$el = $(el);\n    this.validate();\n  }\n\n  validate() {\n    if ($('html').hasClass('lt-ie9')) {\n      this.verticallyAlignDetails();\n    }\n  }\n\n  verticallyAlignDetails() {\n    $('.collections-list', this.$el).imagesLoaded(() => (() => {\n      const result = [];\n      $('.collection-item', this.$el).each((index, collection) => {\n        const collectionsDetails = $(collection).find('.collection-item-details');\n        const collectionDetailsHeight = collectionsDetails.height();\n\n        result.push(collectionsDetails.css({ marginTop: -(collectionDetailsHeight / 2) }));\n      });\n      return result;\n    })());\n  }\n}\n","import $ from 'jquery';\n\nexport default class TemplatePassword {\n  constructor({ el }) {\n    this.$el = $(el);\n    this.togglePasswordForm = this.togglePasswordForm.bind(this);\n    this.toggle = $('.password-entry', this.$el);\n    this._bindEvents();\n    if ($('[data-password-form-inner]', this.$el).hasClass('has-errors')) {\n      this.togglePasswordForm();\n    }\n  }\n\n  _bindEvents() {\n    this.events = [\n      this.toggle.on('click.password', this.togglePasswordForm),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.password'));\n  }\n\n  togglePasswordForm() {\n    $('.password-subscribe-wrapper', this.$el).add('.password-form-wrapper').toggleClass('visible');\n\n    if ($('.password-subscribe-wrapper', this.$el).hasClass('visible')) {\n      this.toggle.text(this.toggle.data('enter-password'));\n    }\n    this.toggle.text(this.toggle.data('cancel'));\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n  }\n}\n","import $ from 'jquery';\nimport imagesLoaded from 'imagesloaded';\n\nexport default class DynamicSlideshow {\n  constructor({ el }) {\n    this.$el = $(el);\n    this.initializedClass = 'slideshow-initialized';\n    this._bindEvents();\n    this.timeouts = [];\n    this._validate();\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.previous-slide', this.$el).on('click.slideshow', event => this.previousSlide(event)),\n      $('.next-slide', this.$el).on('click.slideshow', event => this.nextSlide(event)),\n      $('.slideshow-pagination > span', this.$el).on('click.slideshow', event => this.specificSlide(event)),\n      this.$el.on('mouseenter.slideshow', event => this.pauseLoop(event)),\n      this.$el.on('mouseleave.slideshow', event => this.startLoop(event)),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.slideshow'));\n  }\n\n  update($el) {\n    this.$el = $el;\n    this._validate();\n  }\n\n  _validate() {\n    this.navigation = $('.slideshow-navigation', this.$el);\n    this.pagination = $('.slideshow-pagination', this.$el);\n    this.autoplay = parseInt($('.home-slideshow', this.$el).attr('data-slideshow-autoplay'), 10);\n\n    this.setWindowWidth();\n    this.setupSlides();\n  }\n\n  lockSlide(event) {\n    this.slidesLocked = true;\n    this.pauseLoop();\n    this.specificSlideBlock(event);\n    this.selectedHeight(event);\n  }\n\n  unlockSlide() {\n    this.slidesLocked = false;\n    this.startLoop();\n  }\n\n  setWindowWidth() {\n    this.windowWidth = document.documentElement.clientWidth;\n  }\n\n  setupSlides() {\n    this.slides = $('.slideshow-slide', this.$el);\n    this.slideCount = this.slides.length;\n\n    this.pagination.find('span:first').addClass('active');\n\n      const paginationWidth = this.pagination.width();\n      this.pagination.css({ marginLeft: -(paginationWidth / 2) });\n\n    imagesLoaded(this.$el[0], () => {\n      for (let i = 0; i < this.slides.length; i++) {\n        let slide = this.slides[i];\n        slide = $(slide);\n        const image = slide.find('.slide-image');\n        const imageHeight = image.height();\n\n        slide.data('height', imageHeight);\n\n        const slideHeight = this.windowWidth <= 540 ? slide.height() : imageHeight;\n\n          const slideContent = slide.find('.slide-content');\n          const textHeight = slideContent.height();\n          slideContent.css({ marginTop: -(textHeight / 2) });\n\n        if (i === 0) {\n          slide.addClass('active');\n\n          $('.home-slideshow', this.$el).height(slideHeight);\n          this.navigation.css({ paddingTop: `${(imageHeight - 48) / 2}px` });\n\n          this.resetPaginationPosition(imageHeight);\n        }\n\n        if ((i + 1) === this.slideCount) {\n          $('.home-slideshow', this.$el).addClass('slides-ready');\n        }\n      }\n\n      $(window).on('resize', () => {\n        this.setWindowWidth();\n        this.resetSlideHeights();\n      });\n\n      if (this.autoplay > 0) {\n        this.delay = parseInt(this.autoplay, 10) * 1000;\n\n        this.startLoop();\n      }\n    });\n  }\n\n  resetSlideHeights() {\n    this.slides.each((index, slide) => {\n      const $slide = $(slide);\n\n      const image = $slide.find('.slide-image');\n      const imageHeight = image.height();\n      $slide.css('height', '');\n\n      $slide.data('height', imageHeight);\n\n      const slideHeight = this.windowWidth <= 540 ? $slide.height() : imageHeight;\n\n      if ($slide.hasClass('active')) {\n        $('.home-slideshow', this.$el).height(slideHeight);\n        this.navigation.css({ paddingTop: `${(imageHeight - 48) / 2}px` });\n\n        this.resetPaginationPosition(imageHeight);\n      }\n    });\n  }\n\n  selectedHeight(event) {\n    imagesLoaded(event.target, () => {\n      this.timeouts.push(setTimeout((() => {\n        $('.slideshow-slide', this.$el).removeClass('active');\n        $(event.target).addClass('active');\n\n        const imageHeight = $(event.target).height();\n\n        $('.home-slideshow', this.$el).css({ height: ($(event.target).height()) });\n\n        this.navigation.css({ paddingTop: `${(imageHeight - 48) / 2}px` });\n      }), 500));\n    });\n  }\n\n  resetPaginationPosition(height) {\n    if (this.windowWidth <= 540) {\n      this.pagination.css({\n        bottom: 'auto',\n        top: height - 50,\n      });\n    }\n    this.pagination.css({\n      bottom: 0,\n      top: 'auto',\n    });\n  }\n\n  previousSlide(e) {\n    if (this.sliding) { return; }\n    this.showNewSlide('prev');\n    e.preventDefault();\n  }\n\n  nextSlide(e) {\n    if (this.sliding) { return; }\n    this.showNewSlide('next');\n    if (e) { e.preventDefault(); }\n  }\n\n  specificSlideBlock(event) {\n    const nextSlideID = $(event.target).data('slide-id');\n    this.showNewSlide('next', nextSlideID);\n  }\n\n  specificSlide(event) {\n    if (!$(event.currentTarget).hasClass('active')) {\n      const nextSlideID = $(event.currentTarget).data('slide-id');\n      this.showNewSlide('next', nextSlideID);\n    }\n  }\n\n  updateSlidePagination(index) {\n    this.pagination.find('.active').removeClass('active');\n    this.pagination.find('> span').eq(index).addClass('active');\n  }\n\n  showNewSlide(type, specificSlide) {\n    this.sliding = true;\n    let called = false;\n\n    if (this.slides.length === 1) {\n      this.sliding = false;\n      return;\n    }\n\n    const direction = type === 'next' ? 'left' : 'right';\n    const fallback = type === 'next' ? 'first' : 'last';\n\n    const activeSlide = $('.slideshow-slide.active', this.$el);\n    let nextSlide = specificSlide ? $(`#${specificSlide}`, this.$el) : activeSlide[type]();\n\n    nextSlide = nextSlide.length ? nextSlide : this.slides[fallback]();\n\n    nextSlide.addClass(type);\n    nextSlide[0].offsetWidth; // force reflow\n    activeSlide.addClass(direction);\n    nextSlide.addClass(direction);\n\n    nextSlide.one('transitionend.slideshow', () => {\n      called = true;\n      nextSlide.removeClass([type, direction].join(' ')).addClass('active');\n      activeSlide.removeClass(['active', direction].join(' '));\n      this.sliding = false;\n    });\n\n    // Sometimes on mobile, the swiping will cause the transitionend event\n    // to not fire. Trigger it here, just after it should have ended.\n    setTimeout(() => {\n      if (!called) {\n        nextSlide.trigger('transitionend.slideshow');\n      }\n    },\n    300 + 10); // 0.3s is our transition duration\n\n    const imageHeight = nextSlide.data('height');\n\n    this.updateSlidePagination(nextSlide.index());\n    this.resetPaginationPosition(imageHeight);\n\n    this.navigation.css({ paddingTop: `${(imageHeight - 48) / 2}px` });\n\n    const slideHeight = this.windowWidth <= 720 ? nextSlide.height() : imageHeight;\n\n    $('.home-slideshow', this.$el)\n      .height(slideHeight);\n  }\n\n  startLoop() {\n    if (this.autoplay > 0) {\n      if (!this.loop) {\n        this.loop = true;\n        this.autoplayInt = setInterval(() => this.nextSlide(),\n          this.delay);\n      }\n    }\n  }\n\n  pauseLoop() {\n    this.loop = false;\n    clearInterval(this.autoplayInt);\n  }\n\n  onSectionBlockSelect(data) {\n    const event = {\n      target: data.el,\n    };\n\n    this.lockSlide(event);\n  }\n\n  onSectionBlockDeselect() {\n    this.unlockSlide();\n  }\n\n  onSectionUnload() {\n    this.timeouts.forEach(timeout => clearTimeout(timeout));\n    clearInterval(this.autoplayInt);\n    this._unbindEvents();\n  }\n}\n","import $ from 'jquery';\nimport fitVids from 'fitvids';\n\nfunction loadVimeoThumbnail() {\n  $.getJSON(`http://vimeo.com/api/v2/video/${$('[data-vimeo-image]').data('vimeo-image')}.json?callback=?`,\n    data => $('[data-vimeo-image]').attr('src', data[0].thumbnail_large));\n}\n\nexport default class DynamicVideo {\n  constructor({ el }) {\n    this.$el = $(el);\n    this.initializedClass = 'video-initialized';\n    this._bindEvents();\n    this.timeouts = [];\n    this._validate();\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.home-video-play-button', this.$el).on('click.video', event => this.openVideo(event)),\n      $('body').on('keyup.video', event => this.closeVideo(event)),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.video'));\n  }\n\n  update($el) {\n    this.$el = $el;\n    this._validate();\n  }\n\n  _validate() {\n    if ($('.home-video', this.$el).length) {\n      this.videoWrapper = $('.home-video-embed-wrapper', this.$el);\n      this.video = $('.home-video-embed', this.$el);\n      this.detachedVideo = null;\n    }\n\n    if ($('[data-vimeo-image]', this.$el).length) {\n      loadVimeoThumbnail();\n    }\n  }\n\n  openVideo() {\n    this.videoWrapper.addClass('opening');\n\n    if (this.detachedVideo) {\n      this.video.width('');\n      this.detachedVideo.appendTo(this.video);\n    } else {\n      // scope fitVids to this shopify section using the section id, because fitVids will only\n      // accept a css selector, not an element.\n      fitVids(`#${this.$el.attr('id')}`);\n    }\n\n    this.verticallyCenterVideo();\n\n    this.events.push(\n      $(window).on('resize.video', () => this.verticallyCenterVideo()),\n      this.videoWrapper.on('click.video', () => this.closeVideo()),\n    );\n\n    this.timeouts.push(setTimeout(() => this.videoWrapper.addClass('open'),\n      20));\n  }\n\n  centerVideoText() {\n    const videoContent = $('.home-video-content', this.$el);\n\n    const contentWidth = videoContent.outerWidth();\n    const contentHeight = videoContent.outerHeight();\n\n    videoContent.css({\n      marginTop: -(contentHeight / 2),\n      marginLeft: -(contentWidth / 2),\n    });\n  }\n\n  verticallyCenterVideo() {\n    // Reset everything so the calculations are always fresh\n    this.video.css({\n      marginTop: 0,\n      width: '100%',\n    });\n\n    const video = this.video.find('.fluid-width-video-wrapper');\n    const videoHeight = video.outerHeight();\n    const videoRatio = video.width() / videoHeight;\n    const windowHeight = window.innerHeight || $(window).height();\n    const availableHeight = windowHeight - 60; // for padding\n\n    if (videoHeight > availableHeight) {\n      this.video.removeClass('centered').css({\n        marginTop: 0,\n        width: availableHeight * videoRatio,\n      });\n    } else {\n      this.video.addClass('centered').css({\n        marginTop: -(videoHeight / 2),\n        width: '100%',\n      });\n    }\n  }\n\n  closeVideo(e) {\n    if (!$('.home-video', this.$el).length) { return; }\n\n    if (e && this.videoWrapper.hasClass('open')) {\n      if (e.which !== 27) { return; }\n    }\n\n    $(window).off('resize.video');\n    this.videoWrapper.off('click.video');\n    this.videoWrapper.removeClass('open');\n\n    this.events.push(this.videoWrapper.one('transitionend.video', () => {\n      if (this.videoWrapper.hasClass('opening')) {\n        this.videoWrapper.removeClass('opening');\n        this.detachedVideo = this.video.find('.fluid-width-video-wrapper').detach();\n      }\n    }));\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n    this.timeouts.forEach(timeout => clearTimeout(timeout));\n  }\n}\n","import $ from 'jquery';\nimport ModalContent from '../components/ModalContent';\nimport ModalView from '../components/ModalView';\n\n// IE11 polyfill for Number.isNaN\nNumber.isNaN = Number.isNaN || (value => value !== value);\n\nfunction saveSpecialInstructions() {\n  const newNote = $('.cart-instructions textarea').val();\n  Shopify.updateCartNote(newNote, () => {\n    // empty function so that Shopify\"s callback isn\"t invoked\n  });\n}\n\nfunction updatePrice($el, price) {\n  $.each($el[0].attributes, (index, attribute) => {\n    if (attribute.name.indexOf('data-currency') > -1) {\n      $el.attr(attribute.name, '');\n    }\n  });\n\n  $el\n    .html(price)\n    .attr(`data-currency-${Shop.currency}`, price)\n    .attr('data-currency', Shop.currency);\n\n  if (Shop.currencySwitcher) {\n    $('[data-currency-converter]').trigger('updateCurrency', $el.parent());\n  }\n}\n\nexport default class StaticCart {\n  constructor({ el }) {\n    this.$el = $(el);\n    this.messages = JSON.parse($('[data-cart-messages]', this.$el).text());\n    this.updateShippingLabel = this.updateShippingLabel.bind(this);\n    this._bindEvents();\n    this.timeouts = [];\n    this.render();\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.cart-instructions textarea', this.$el).on('change.cart', event => saveSpecialInstructions(event)),\n      $('.cart-item-upload', this.$el).on('click.cart', event => this.showFile(event)),\n      $('.get-rates', this.$el).on('click.cart', () => this.calculateShipping()),\n    ];\n\n    this._bindCartItemEvents(this.$el);\n  }\n\n  _bindCartItemEvents(scope) {\n    // these are added separately so they can be easily added after undoing an item removal\n    this.events.push(\n      $('.cart-item-quantity-display', scope).on('change.cart', event => this.updateQuantity(event)),\n      $('.cart-item-decrease', scope).on('click.cart', event => this.updateQuantity(event)),\n      $('.cart-item-increase', scope).on('click.cart', event => this.updateQuantity(event)),\n      $('.remove span', scope).on('click.cart', event => this.removeProduct(event)),\n    );\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.cart'));\n  }\n\n  render() {\n    this.section = window.sectionJSON;\n    this.cartText = window.cartTextJSON;\n    this.$shippingStrings = $('[data-shipping-calculator-strings]');\n    this.savedProducts = [];\n\n    if (this.$shippingStrings.length) {\n      this.shippingCalculator();\n\n      if (\n        Shop.customerLoggedIn\n        && Shop.customerAddress\n        && Shop.customerAddress.country.length\n        && Shop.customerAddress.zip.length\n      ) {\n        this.calculateShipping(true);\n      }\n\n      Shopify.onError = XMLHttpRequest => this.handleErrors(XMLHttpRequest);\n    }\n  }\n\n  updateQuantity(e) {\n    let newQuantity;\n    const $productRow = $(e.target).parents('tr');\n    const $productPrice = $productRow.find('.cart-item-total .money');\n    const $productQuantity = $productRow.find('.cart-item-quantity-display');\n    let oldQuantity = parseInt($productQuantity.val(), 10);\n    oldQuantity = Number.isNaN(oldQuantity) ? 1 : oldQuantity;\n\n    if ($(e.target).hasClass('cart-item-quantity-display')) {\n      newQuantity = oldQuantity;\n    } else if ($(e.target).hasClass('cart-item-increase')) {\n      newQuantity = oldQuantity + 1;\n    } else if ($(e.target).hasClass('cart-item-decrease')) {\n      newQuantity = Math.max(oldQuantity - 1, 0);\n    }\n\n    const variant = $productRow.data('variant');\n\n    if (newQuantity === 0) {\n      this.removeProduct(null, variant);\n      return;\n    }\n\n    $productQuantity.val(newQuantity);\n\n    Shopify.changeItem(variant, newQuantity, (cart) => {\n      const cartItem = cart.items.filter(item => item.id === variant);\n      const item = cartItem[0];\n      const newProductPrice = Shopify.formatMoney(item.line_price, Shop.moneyFormat);\n      const cartItemQuantity = item.quantity;\n      updatePrice($productPrice, newProductPrice);\n      $productQuantity.val(cartItemQuantity);\n\n      if (cartItemQuantity !== newQuantity) {\n        const modalMessage = Shop.cartQuantityError.message\n          .replace('** quantity **', cartItemQuantity)\n          .replace('** title **', item.title);\n\n        const modalContent = new ModalContent({\n          title: Shop.cartQuantityError.title,\n          message: `<p>${modalMessage}</p>`,\n          button: Shop.cartQuantityError.button,\n        });\n\n        this.modalView = new ModalView({\n          model: modalContent,\n          el: $('.modal-wrapper'),\n        });\n      }\n\n      this.updateCart(cart);\n    });\n  }\n\n  removeProduct(e, variant) {\n    let itemRow;\n    if (variant) {\n      itemRow = $(`.variant-${variant}`);\n    } else {\n      variant = $(e.target).parents('tr').data('variant');\n      itemRow = $(e.target).parents('tr');\n    }\n\n    const itemRowContents = itemRow.find('td');\n    const productTitle = itemRow.data('title');\n    const productURL = itemRow.data('url');\n\n    this.savedProducts[variant] = {\n      id: variant,\n      content: itemRowContents,\n      quantity: itemRow.find('td.quantity input').val(),\n    };\n\n    const showUndo = () => {\n      const itemRemovedText = this.messages.itemRemovedText.replace('{{ item_title }}', `<a href='${productURL}'>${productTitle}</a>`);\n\n      itemRow.html(`<td colspan='5'>${itemRemovedText} <span class='cart-undo' data-variant='${variant}'>${this.messages.cartUndo}</span>`);\n      itemRow.removeClass('removing');\n\n      this.events.push($('.cart-undo', itemRow).one('click.cart', event => this.undoRemoval(event)));\n    };\n\n    Shopify.removeItem(variant, (cart) => {\n      this.events.push(itemRow.addClass('removing').one('transitionend.cart', () => showUndo()));\n\n      this.updateCart(cart);\n    });\n  }\n\n  undoRemoval(e) {\n    const variant = $(e.target).data('variant');\n    const savedProduct = this.savedProducts[variant];\n    const undoneProduct = $(`tr.variant-${variant}`).html(savedProduct.content);\n\n    Shopify.addItem(\n      variant,\n      savedProduct.quantity,\n      () => Shopify.getCart(cart => this.updateCart(cart)),\n    );\n\n    this._bindCartItemEvents(undoneProduct);\n  }\n\n  updateCart(cart) {\n    const newTotal = Shopify.formatMoney(cart.total_price, Shop.moneyFormat);\n    updatePrice($('.cart-checkout .cart-price .money'), newTotal);\n\n    const cartCount = cart.item_count;\n    const cartCountText = cart.item_count === 1 ? this.cartText[0] : this.cartText[1];\n    $('.bag-count').text(cartCount);\n    $('.bag-text').text(cartCountText);\n  }\n\n  showFile(e) {\n    const file = $(e.target).data('file');\n\n    if (file.match(/(jpg|jpeg|png|gif)/)) {\n      const image = `<img alt='' src='${file}'>`;\n\n      const modalContent = new ModalContent({\n        title: $(e.target).prev().text(),\n        message: image,\n      });\n\n      this.modalView = new ModalView({\n        model: modalContent,\n        el: $('.modal-wrapper'),\n      });\n    }\n  }\n\n  shippingCalculator() {\n    Shopify.Cart.ShippingCalculator.show({\n      submitButton: this.messages.shippingCalculatorSubmitButton,\n      submitButtonDisabled: this.messages.shippingCalculatorDisabled,\n      customerIsLoggedIn: Shop.customerLoggedIn,\n      moneyFormat: Shop.moneyFormat,\n    });\n\n    const selectableOptions = $('.cart-shipping-calculator select');\n\n    this.timeouts.push(\n      setTimeout(() => selectableOptions.map((index, select) => this.updateShippingLabel(select)), 500),\n    );\n\n    $('.cart-shipping-calculator select').change(() => selectableOptions.map((index, select) => this.updateShippingLabel(select)));\n  }\n\n  calculateShipping(auto) {\n    let shippingAddress;\n    $('.get-rates').val(this.messages.shippingCalculatorDisabled);\n\n    if (auto) {\n      shippingAddress = Shop.customerAddress;\n    } else {\n      shippingAddress = {};\n      shippingAddress.zip = $('.address-zip').val() || '';\n      shippingAddress.country = $('.address-country').val() || '';\n      shippingAddress.province = $('.address-province').val() || '';\n    }\n\n    Shopify.getCartShippingRatesForDestination(shippingAddress, (rates) => {\n      let address = `${shippingAddress.zip}, ${shippingAddress.province}, ${shippingAddress.country}`;\n      if (!shippingAddress.province.length) {\n        address = `${shippingAddress.zip}, ${shippingAddress.country}`;\n      }\n      if (!shippingAddress.zip.length) {\n        address = `${shippingAddress.province}, ${shippingAddress.country}`;\n      }\n      if (!shippingAddress.province.length || !shippingAddress.zip.length) {\n        address = shippingAddress.country;\n      }\n\n      const shippingCalculatorResponse = $('.cart-shipping-calculator-response');\n      shippingCalculatorResponse.empty().append(\"<p class='shipping-calculator-response message'/><ul class='shipping-rates'/>\");\n\n      const ratesFeedback = $('.shipping-calculator-response');\n\n      if (rates.length > 1) {\n        const firstRate = Shopify.Cart.ShippingCalculator.formatRate(rates[0].price);\n        const feedback = this.messages.shippingCalculatorRates\n          .replace('{{ address }}', address)\n          .replace('{{ number_of_rates }}', rates.length)\n          .replace('{{ rate }}', `<span class='money'>${firstRate}</span>`);\n        ratesFeedback.html(feedback);\n      } else if (rates.length === 1) {\n        const response = this.messages.shippingCalculatorRate.replace('{{ address }}', address);\n        ratesFeedback.html(response);\n      } else {\n        ratesFeedback.html(this.messages.shippingCalculatorNoRates);\n      }\n\n      rates.forEach((rate) => {\n        const price = Shopify.Cart.ShippingCalculator.formatRate(rate.price);\n        const rateValues = this.messages.shippingCalculatorRateValues\n          .replace('{{ rate_title }}', rate.name)\n          .replace('{{ rate }}', `<span class='money'>${price}</span>`);\n        $('.shipping-rates').append(`<li>${rateValues}</li>`);\n      });\n\n      $('.get-rates').val(this.messages.shippingCalculatorSubmitButton);\n    });\n  }\n\n  handleErrors(errors) {\n    let errorMessage = $.parseJSON(errors.responseText);\n    errorMessage = this.messages.shippingCalculatorError.replace('{{ error_message }}', errorMessage.zip);\n    $('.cart-shipping-calculator-response').html(`<p class='error'>${errorMessage}</p>`);\n    $('.get-rates').val(this.messages.shippingCalculatorSubmitButton);\n  }\n\n  updateShippingLabel(select) {\n    if (select) {\n      const $select = $(select);\n      let selectedOption = $select.find('option:selected').val();\n\n      if (!selectedOption || (selectedOption === '---')) {\n        selectedOption = $select.data('default');\n        $select.val(selectedOption);\n      }\n\n      $select.prev('.selected-text').text(selectedOption);\n\n      this.timeouts.push(setTimeout(() => {\n        if ($select.attr('name') === 'address[country]') {\n          this.updateShippingLabel($('#address_province'));\n        }\n      },\n      1500));\n    }\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n    this.timeouts.forEach(timeout => clearTimeout(timeout));\n  }\n}\n","'use strict';\n\nvar moneyFormats = {\n  USD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} USD'\n  },\n  EUR: {\n    'money_format': '&euro;{{amount}}',\n    'money_with_currency_format': '&euro;{{amount}} EUR'\n  },\n  GBP: {\n    'money_format': '&pound;{{amount}}',\n    'money_with_currency_format': '&pound;{{amount}} GBP'\n  },\n  CAD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} CAD'\n  },\n  ALL: {\n    'money_format': 'Lek {{amount}}',\n    'money_with_currency_format': 'Lek {{amount}} ALL'\n  },\n  DZD: {\n    'money_format': 'DA {{amount}}',\n    'money_with_currency_format': 'DA {{amount}} DZD'\n  },\n  AOA: {\n    'money_format': 'Kz{{amount}}',\n    'money_with_currency_format': 'Kz{{amount}} AOA'\n  },\n  ARS: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} ARS'\n  },\n  AMD: {\n    'money_format': '{{amount}} AMD',\n    'money_with_currency_format': '{{amount}} AMD'\n  },\n  AWG: {\n    'money_format': 'Afl{{amount}}',\n    'money_with_currency_format': 'Afl{{amount}} AWG'\n  },\n  AUD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} AUD'\n  },\n  BBD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} Bds'\n  },\n  AZN: {\n    'money_format': 'm.{{amount}}',\n    'money_with_currency_format': 'm.{{amount}} AZN'\n  },\n  BDT: {\n    'money_format': 'Tk {{amount}}',\n    'money_with_currency_format': 'Tk {{amount}} BDT'\n  },\n  BSD: {\n    'money_format': 'BS${{amount}}',\n    'money_with_currency_format': 'BS${{amount}} BSD'\n  },\n  BHD: {\n    'money_format': '{{amount}}0 BD',\n    'money_with_currency_format': '{{amount}}0 BHD'\n  },\n  BYR: {\n    'money_format': 'Br {{amount}}',\n    'money_with_currency_format': 'Br {{amount}} BYR'\n  },\n  BZD: {\n    'money_format': 'BZ${{amount}}',\n    'money_with_currency_format': 'BZ${{amount}} BZD'\n  },\n  BTN: {\n    'money_format': 'Nu {{amount}}',\n    'money_with_currency_format': 'Nu {{amount}} BTN'\n  },\n  BAM: {\n    'money_format': 'KM {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'KM {{amount_with_comma_separator}} BAM'\n  },\n  BRL: {\n    'money_format': 'R$ {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'R$ {{amount_with_comma_separator}} BRL'\n  },\n  BOB: {\n    'money_format': 'Bs{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Bs{{amount_with_comma_separator}} BOB'\n  },\n  BWP: {\n    'money_format': 'P{{amount}}',\n    'money_with_currency_format': 'P{{amount}} BWP'\n  },\n  BND: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} BND'\n  },\n  BGN: {\n    'money_format': '{{amount}} лв',\n    'money_with_currency_format': '{{amount}} лв BGN'\n  },\n  MMK: {\n    'money_format': 'K{{amount}}',\n    'money_with_currency_format': 'K{{amount}} MMK'\n  },\n  KHR: {\n    'money_format': 'KHR{{amount}}',\n    'money_with_currency_format': 'KHR{{amount}}'\n  },\n  KYD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} KYD'\n  },\n  XAF: {\n    'money_format': 'FCFA{{amount}}',\n    'money_with_currency_format': 'FCFA{{amount}} XAF'\n  },\n  CLP: {\n    'money_format': '${{amount_no_decimals}}',\n    'money_with_currency_format': '${{amount_no_decimals}} CLP'\n  },\n  CNY: {\n    'money_format': '&#165;{{amount}}',\n    'money_with_currency_format': '&#165;{{amount}} CNY'\n  },\n  COP: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} COP'\n  },\n  CRC: {\n    'money_format': '&#8353; {{amount_with_comma_separator}}',\n    'money_with_currency_format': '&#8353; {{amount_with_comma_separator}} CRC'\n  },\n  HRK: {\n    'money_format': '{{amount_with_comma_separator}} kn',\n    'money_with_currency_format': '{{amount_with_comma_separator}} kn HRK'\n  },\n  CZK: {\n    'money_format': '{{amount_with_comma_separator}} K&#269;',\n    'money_with_currency_format': '{{amount_with_comma_separator}} K&#269;'\n  },\n  DKK: {\n    'money_format': '{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'kr.{{amount_with_comma_separator}}'\n  },\n  DOP: {\n    'money_format': 'RD$ {{amount}}',\n    'money_with_currency_format': 'RD$ {{amount}}'\n  },\n  XCD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'EC${{amount}}'\n  },\n  EGP: {\n    'money_format': 'LE {{amount}}',\n    'money_with_currency_format': 'LE {{amount}} EGP'\n  },\n  ETB: {\n    'money_format': 'Br{{amount}}',\n    'money_with_currency_format': 'Br{{amount}} ETB'\n  },\n  XPF: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}} XPF',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} XPF'\n  },\n  FJD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'FJ${{amount}}'\n  },\n  GMD: {\n    'money_format': 'D {{amount}}',\n    'money_with_currency_format': 'D {{amount}} GMD'\n  },\n  GHS: {\n    'money_format': 'GH&#8373;{{amount}}',\n    'money_with_currency_format': 'GH&#8373;{{amount}}'\n  },\n  GTQ: {\n    'money_format': 'Q{{amount}}',\n    'money_with_currency_format': '{{amount}} GTQ'\n  },\n  GYD: {\n    'money_format': 'G${{amount}}',\n    'money_with_currency_format': '${{amount}} GYD'\n  },\n  GEL: {\n    'money_format': '{{amount}} GEL',\n    'money_with_currency_format': '{{amount}} GEL'\n  },\n  HNL: {\n    'money_format': 'L {{amount}}',\n    'money_with_currency_format': 'L {{amount}} HNL'\n  },\n  HKD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'HK${{amount}}'\n  },\n  HUF: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} Ft'\n  },\n  ISK: {\n    'money_format': '{{amount_no_decimals}} kr',\n    'money_with_currency_format': '{{amount_no_decimals}} kr ISK'\n  },\n  INR: {\n    'money_format': 'Rs. {{amount}}',\n    'money_with_currency_format': 'Rs. {{amount}}'\n  },\n  IDR: {\n    'money_format': '{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Rp {{amount_with_comma_separator}}'\n  },\n  ILS: {\n    'money_format': '{{amount}} NIS',\n    'money_with_currency_format': '{{amount}} NIS'\n  },\n  JMD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} JMD'\n  },\n  JPY: {\n    'money_format': '&#165;{{amount_no_decimals}}',\n    'money_with_currency_format': '&#165;{{amount_no_decimals}} JPY'\n  },\n  JEP: {\n    'money_format': '&pound;{{amount}}',\n    'money_with_currency_format': '&pound;{{amount}} JEP'\n  },\n  JOD: {\n    'money_format': '{{amount}}0 JD',\n    'money_with_currency_format': '{{amount}}0 JOD'\n  },\n  KZT: {\n    'money_format': '{{amount}} KZT',\n    'money_with_currency_format': '{{amount}} KZT'\n  },\n  KES: {\n    'money_format': 'KSh{{amount}}',\n    'money_with_currency_format': 'KSh{{amount}}'\n  },\n  KWD: {\n    'money_format': '{{amount}}0 KD',\n    'money_with_currency_format': '{{amount}}0 KWD'\n  },\n  KGS: {\n    'money_format': 'лв{{amount}}',\n    'money_with_currency_format': 'лв{{amount}}'\n  },\n  LVL: {\n    'money_format': 'Ls {{amount}}',\n    'money_with_currency_format': 'Ls {{amount}} LVL'\n  },\n  LBP: {\n    'money_format': 'L&pound;{{amount}}',\n    'money_with_currency_format': 'L&pound;{{amount}} LBP'\n  },\n  LTL: {\n    'money_format': '{{amount}} Lt',\n    'money_with_currency_format': '{{amount}} Lt'\n  },\n  MGA: {\n    'money_format': 'Ar {{amount}}',\n    'money_with_currency_format': 'Ar {{amount}} MGA'\n  },\n  MKD: {\n    'money_format': 'ден {{amount}}',\n    'money_with_currency_format': 'ден {{amount}} MKD'\n  },\n  MOP: {\n    'money_format': 'MOP${{amount}}',\n    'money_with_currency_format': 'MOP${{amount}}'\n  },\n  MVR: {\n    'money_format': 'Rf{{amount}}',\n    'money_with_currency_format': 'Rf{{amount}} MRf'\n  },\n  MXN: {\n    'money_format': '$ {{amount}}',\n    'money_with_currency_format': '$ {{amount}} MXN'\n  },\n  MYR: {\n    'money_format': 'RM{{amount}} MYR',\n    'money_with_currency_format': 'RM{{amount}} MYR'\n  },\n  MUR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} MUR'\n  },\n  MDL: {\n    'money_format': '{{amount}} MDL',\n    'money_with_currency_format': '{{amount}} MDL'\n  },\n  MAD: {\n    'money_format': '{{amount}} dh',\n    'money_with_currency_format': 'Dh {{amount}} MAD'\n  },\n  MNT: {\n    'money_format': '{{amount_no_decimals}} &#8366',\n    'money_with_currency_format': '{{amount_no_decimals}} MNT'\n  },\n  MZN: {\n    'money_format': '{{amount}} Mt',\n    'money_with_currency_format': 'Mt {{amount}} MZN'\n  },\n  NAD: {\n    'money_format': 'N${{amount}}',\n    'money_with_currency_format': 'N${{amount}} NAD'\n  },\n  NPR: {\n    'money_format': 'Rs{{amount}}',\n    'money_with_currency_format': 'Rs{{amount}} NPR'\n  },\n  ANG: {\n    'money_format': '&fnof;{{amount}}',\n    'money_with_currency_format': '{{amount}} NA&fnof;'\n  },\n  NZD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} NZD'\n  },\n  NIO: {\n    'money_format': 'C${{amount}}',\n    'money_with_currency_format': 'C${{amount}} NIO'\n  },\n  NGN: {\n    'money_format': '&#8358;{{amount}}',\n    'money_with_currency_format': '&#8358;{{amount}} NGN'\n  },\n  NOK: {\n    'money_format': 'kr {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'kr {{amount_with_comma_separator}} NOK'\n  },\n  OMR: {\n    'money_format': '{{amount_with_comma_separator}} OMR',\n    'money_with_currency_format': '{{amount_with_comma_separator}} OMR'\n  },\n  PKR: {\n    'money_format': 'Rs.{{amount}}',\n    'money_with_currency_format': 'Rs.{{amount}} PKR'\n  },\n  PGK: {\n    'money_format': 'K {{amount}}',\n    'money_with_currency_format': 'K {{amount}} PGK'\n  },\n  PYG: {\n    'money_format': 'Gs. {{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': 'Gs. {{amount_no_decimals_with_comma_separator}} PYG'\n  },\n  PEN: {\n    'money_format': 'S/. {{amount}}',\n    'money_with_currency_format': 'S/. {{amount}} PEN'\n  },\n  PHP: {\n    'money_format': '&#8369;{{amount}}',\n    'money_with_currency_format': '&#8369;{{amount}} PHP'\n  },\n  PLN: {\n    'money_format': '{{amount_with_comma_separator}} zl',\n    'money_with_currency_format': '{{amount_with_comma_separator}} zl PLN'\n  },\n  QAR: {\n    'money_format': 'QAR {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'QAR {{amount_with_comma_separator}}'\n  },\n  RON: {\n    'money_format': '{{amount_with_comma_separator}} lei',\n    'money_with_currency_format': '{{amount_with_comma_separator}} lei RON'\n  },\n  RUB: {\n    'money_format': '&#1088;&#1091;&#1073;{{amount_with_comma_separator}}',\n    'money_with_currency_format': '&#1088;&#1091;&#1073;{{amount_with_comma_separator}} RUB'\n  },\n  RWF: {\n    'money_format': '{{amount_no_decimals}} RF',\n    'money_with_currency_format': '{{amount_no_decimals}} RWF'\n  },\n  WST: {\n    'money_format': 'WS$ {{amount}}',\n    'money_with_currency_format': 'WS$ {{amount}} WST'\n  },\n  SAR: {\n    'money_format': '{{amount}} SR',\n    'money_with_currency_format': '{{amount}} SAR'\n  },\n  STD: {\n    'money_format': 'Db {{amount}}',\n    'money_with_currency_format': 'Db {{amount}} STD'\n  },\n  RSD: {\n    'money_format': '{{amount}} RSD',\n    'money_with_currency_format': '{{amount}} RSD'\n  },\n  SCR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} SCR'\n  },\n  SGD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} SGD'\n  },\n  SYP: {\n    'money_format': 'S&pound;{{amount}}',\n    'money_with_currency_format': 'S&pound;{{amount}} SYP'\n  },\n  ZAR: {\n    'money_format': 'R {{amount}}',\n    'money_with_currency_format': 'R {{amount}} ZAR'\n  },\n  KRW: {\n    'money_format': '&#8361;{{amount_no_decimals}}',\n    'money_with_currency_format': '&#8361;{{amount_no_decimals}} KRW'\n  },\n  LKR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} LKR'\n  },\n  SEK: {\n    'money_format': '{{amount_no_decimals}} kr',\n    'money_with_currency_format': '{{amount_no_decimals}} kr SEK'\n  },\n  CHF: {\n    'money_format': 'SFr. {{amount}}',\n    'money_with_currency_format': 'SFr. {{amount}} CHF'\n  },\n  TWD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} TWD'\n  },\n  THB: {\n    'money_format': '{{amount}} &#xe3f;',\n    'money_with_currency_format': '{{amount}} &#xe3f; THB'\n  },\n  TZS: {\n    'money_format': '{{amount}} TZS',\n    'money_with_currency_format': '{{amount}} TZS'\n  },\n  TTD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} TTD'\n  },\n  TND: {\n    'money_format': '{{amount}}',\n    'money_with_currency_format': '{{amount}} DT'\n  },\n  TRY: {\n    'money_format': '{{amount}}TL',\n    'money_with_currency_format': '{{amount}}TL'\n  },\n  UGX: {\n    'money_format': 'Ush {{amount_no_decimals}}',\n    'money_with_currency_format': 'Ush {{amount_no_decimals}} UGX'\n  },\n  UAH: {\n    'money_format': '₴{{amount}}',\n    'money_with_currency_format': '₴{{amount}} UAH'\n  },\n  AED: {\n    'money_format': 'Dhs. {{amount}}',\n    'money_with_currency_format': 'Dhs. {{amount}} AED'\n  },\n  UYU: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} UYU'\n  },\n  VUV: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}}VT'\n  },\n  VEF: {\n    'money_format': 'Bs. {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Bs. {{amount_with_comma_separator}} VEF'\n  },\n  VND: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}}&#8363;',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} VND'\n  },\n  XBT: {\n    'money_format': '{{amount_no_decimals}} BTC',\n    'money_with_currency_format': '{{amount_no_decimals}} BTC'\n  },\n  XOF: {\n    'money_format': 'CFA{{amount}}',\n    'money_with_currency_format': 'CFA{{amount}} XOF'\n  },\n  ZMW: {\n    'money_format': 'K{{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': 'ZMW{{amount_no_decimals_with_comma_separator}}'\n  }\n};\n\n/**\n * Format a number to a specific format\n *\n * @param number {Number}\n * @param precision {Number}\n * @param thousands {String}\n * @param decimal {String}\n * @returns {String}\n */\nfunction formatWithDelimiters(number) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var thousands = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n  var decimal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n\n  if (isNaN(number) || !number) {\n    return 0;\n  }\n\n  var preciseNumber = (number / 100.0).toFixed(precision);\n\n  var parts = preciseNumber.split(thousands);\n  var dollarsAmount = parts[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1' + thousands);\n  var centsAmount = parts[1] ? decimal + parts[1] : '';\n\n  return dollarsAmount + centsAmount;\n}\n\n/**\n * Convert a money value in cents to a formatted currency string\n *\n * @param cents {Number|String}\n * @param format {String}\n * @returns {String}\n */\nfunction formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n\n  var value = '';\n  var placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n\n  switch (format.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2, ',', '.');\n      break;\n    case 'amount_with_space_separator':\n      value = formatWithDelimiters(cents, 2, ' ', '.');\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_with_apostrophe_separator':\n      value = formatWithDelimiters(cents, 2, '\\'', '.');\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0, ',', '.');\n      break;\n    case 'amount_no_decimals_with_space_separator':\n      value = formatWithDelimiters(cents, 0, ' ', '.');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, ',', '.');\n      break;\n  }\n\n  return format.replace(placeholderRegex, value);\n}\n\n/**\n * Return the value of money in cents value\n *\n * @param moneyAmount {Number}\n * @param format {String}\n * @param currency {String}\n * @returns {Number}\n * @private\n */\nfunction getCentsValue(moneyAmount, format, currency) {\n  var cents = 0;\n  // Convert prices from float values to integers if needed, then convert\n  if (format.indexOf('amount_no_decimals') !== -1) {\n    cents = moneyAmount * 100;\n  } else if (currency === 'JOD' || currency === 'KWD' || currency === 'BHD') {\n    cents = moneyAmount / 10;\n  } else {\n    cents = moneyAmount;\n  }\n\n  return cents;\n}\n\n/**\n * Converts formatted money to a number\n *\n * @param priceEl {HTMLElement}\n * @returns {Number|String}\n */\nfunction getMoneyValue(priceEl) {\n  var price = priceEl.textContent;\n  var value = parseInt(price.replace(/[^0-9]/g, ''), 10);\n\n  return !isNaN(value) ? value : '';\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar CurrencyConverter = function () {\n  function CurrencyConverter() {\n    classCallCheck(this, CurrencyConverter);\n\n    /**\n     * @property {object} defaults                       - The default configuration for CurrencyConverter\n     * @property {string} defaults.switcherSelector      - CSS Selector for dropdown which controls currency conversion\n     * @property {string} defaults.priceSelector         - CSS Selector for elements containing prices\n     * @property {string} defaults.shopCurrency          - Shop's currency (Currency which prices are printed as)\n     * @property {string} defaults.defaultCurrency       - Theme's currency setting, or initial currency to show on the page\n     * @property {string} defaults.displayFormat         - `money_with_currency_format` or `money_format`\n     * @property {string} defaults.moneyFormat           - Shop's currency formatted using the display format\n     * @property {string} defaults.moneyFormatNoCurrency - Shop's currency formatted without showing currency\n     * @property {string} defaults.moneyFormatCurrency   - Shop's currency formatted showing currency\n     */\n    this.defaults = {\n      switcherSelector: '[data-currency-converter]',\n      priceSelector: '.money',\n      shopCurrency: '',\n      defaultCurrency: '',\n      displayFormat: '',\n      moneyFormat: '',\n      moneyFormatNoCurrency: '',\n      moneyFormatCurrency: ''\n    };\n\n    this.options = {};\n    this.moneyFormats = moneyFormats;\n    this.storage = 'currency';\n    this.currentCurrency = null;\n    this.isInitialised = false;\n  }\n\n  createClass(CurrencyConverter, [{\n    key: 'init',\n    value: function init(settings) {\n      var _this = this;\n\n      if (!window.Currency || this.isInitialised) return;\n\n      Object.keys(this.defaults).forEach(function (key) {\n        _this.options[key] = settings[key] || _this.defaults[key];\n      });\n\n      this.currentCurrency = this._getStoredCurrency() || this.options.defaultCurrency;\n      this.moneyFormats[this.options.shopCurrency].money_with_currency_format = this.options.moneyFormatCurrency;\n      this.moneyFormats[this.options.shopCurrency].money_format = this.options.moneyFormatNoCurrency;\n\n      this.isInitialised = true;\n      this._current();\n    }\n\n    /**\n     * Change the currency to a new currency using an ISO currency code\n     *\n     * @param newCurrency\n     */\n\n  }, {\n    key: 'setCurrency',\n    value: function setCurrency(newCurrency) {\n      if (!this.isInitialised) return;\n\n      this._convertAll(this.currentCurrency, newCurrency);\n    }\n\n    /**\n     * Updates a price on the page to use the active Currency, and formatting\n     *\n     * @param priceEl {HTMLElement}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(priceEl) {\n      if (!this.isInitialised) return;\n\n      var attributes = priceEl.attributes;\n      for (var attr = 0; attr < attributes.length; attr++) {\n        var attribute = attributes[attr];\n\n        if (attribute.name.indexOf('data-currency') === 0) {\n          priceEl.setAttribute(attribute.name, '');\n        }\n      }\n\n      var moneyValue = getMoneyValue(priceEl);\n      var centsValue = getCentsValue(moneyValue, this.options.moneyFormat, this.options.shopCurrency);\n\n      // Cents value is empty, but not 0. 0$ is a valid price, while empty is not\n      if (centsValue === '') return;\n\n      var priceFormatted = formatMoney(centsValue, this.options.moneyFormat);\n\n      priceEl.innerHTML = priceFormatted;\n      priceEl.removeAttribute('data-currency');\n      priceEl.setAttribute('data-currency-' + this.options.shopCurrency, priceFormatted);\n      priceEl.setAttribute('data-currency', this.options.shopCurrency);\n\n      this._convertEl(priceEl, this.options.shopCurrency, this.currentCurrency);\n    }\n  }, {\n    key: '_getStoredCurrency',\n    value: function _getStoredCurrency() {\n      try {\n        return localStorage.getItem(this.storage);\n      } catch (error) {\n        console.warn(error);\n        return this.options.defaultCurrency;\n      }\n    }\n  }, {\n    key: '_setStoredCurrency',\n    value: function _setStoredCurrency(currency) {\n      try {\n        localStorage.setItem(this.storage, currency);\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n\n    /**\n     * Update the currency switcher to the current currency\n     * @private\n     */\n\n  }, {\n    key: '_current',\n    value: function _current() {\n      var switchers = document.querySelectorAll(this.options.switcherSelector);\n      for (var i = 0; i < switchers.length; i++) {\n        var switcher = switchers[i];\n\n        var childrenEls = switcher.querySelectorAll('option');\n\n        for (var _i = 0; _i < childrenEls.length; _i++) {\n          var optionEl = childrenEls[_i];\n\n          if (optionEl.selected && optionEl.value !== this.currentCurrency) {\n            optionEl.selected = false;\n          }\n\n          if (optionEl.value === this.currentCurrency) {\n            optionEl.selected = true;\n          }\n        }\n      }\n\n      this._convertAll(this.options.shopCurrency, this.currentCurrency);\n    }\n\n    /**\n     * Converts an individual price to the new format\n     *\n     * @param priceEl\n     * @param oldCurrency\n     * @param newCurrency\n     * @private\n     */\n\n  }, {\n    key: '_convertEl',\n    value: function _convertEl(priceEl, oldCurrency, newCurrency) {\n\n      // If the amount has already been converted, we leave it alone.\n      if (priceEl.getAttribute('data-currency') === newCurrency) {\n        return;\n      }\n\n      // If we are converting to a currency that we have saved, we will use the saved amount.\n      if (priceEl.getAttribute('data-currency-' + newCurrency)) {\n        priceEl.innerHTML = priceEl.getAttribute('data-currency-' + newCurrency);\n      } else {\n        var oldFormat = this.moneyFormats[oldCurrency][this.options.displayFormat];\n        var newFormat = this.moneyFormats[newCurrency][this.options.displayFormat];\n\n        var moneyValue = getMoneyValue(priceEl);\n        var centsValue = getCentsValue(moneyValue, oldFormat, oldCurrency);\n\n        // Cents value is empty, but not 0. 0$ is a valid price, while empty is not\n        if (centsValue === '') return;\n\n        var cents = window.Currency.convert(centsValue, oldCurrency, newCurrency);\n        var priceFormatted = formatMoney(cents, newFormat);\n\n        priceEl.setAttribute('data-currency-' + newCurrency, priceFormatted);\n        priceEl.innerHTML = priceFormatted;\n      }\n\n      priceEl.setAttribute('data-currency', newCurrency);\n    }\n\n    /**\n     * Convert all prices on the page to the new currency\n     *\n     * @param oldCurrency\n     * @param newCurrency\n     * @private\n     */\n\n  }, {\n    key: '_convertAll',\n    value: function _convertAll(oldCurrency, newCurrency) {\n      var priceEls = document.querySelectorAll(this.options.priceSelector);\n      if (!priceEls) return;\n\n      this.currentCurrency = newCurrency;\n      this._setStoredCurrency(newCurrency);\n\n      for (var i = 0; i < priceEls.length; i++) {\n        this._convertEl(priceEls[i], oldCurrency, newCurrency);\n      }\n    }\n  }]);\n  return CurrencyConverter;\n}();\n\nvar CurrencyConverter$1 = new CurrencyConverter();\n\nmodule.exports = CurrencyConverter$1;\n","\n/*!\n * shopify-variants v1.0.0\n * (c) 2018 Pixel Union\n */\n\nimport $ from 'jquery';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Node = function () {\n  function Node(variant) {\n    classCallCheck(this, Node);\n\n    this.variant = variant;\n    this.optionsCount = this.variant.options.length;\n    this.neighbors = [];\n\n    for (var i = 0; i < this.optionsCount; i++) {\n      this.neighbors.push([]);\n    }\n  }\n\n  createClass(Node, [{\n    key: \"addNeighbor\",\n    value: function addNeighbor(variant) {\n      for (var i = 0; i < this.optionsCount; i++) {\n        if (this.variant.options[i] !== variant.options[i]) {\n          this.neighbors[i].push(variant);\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getValidOptions\",\n    value: function getValidOptions() {\n      var _this = this;\n\n      var options = [];\n\n      var _loop = function _loop(i) {\n        var variants = [_this.variant].concat(toConsumableArray(_this.neighbors[i]));\n        options[i] = {};\n\n        variants.forEach(function (item) {\n          var variant = item;\n          var option = variant.options[i];\n\n          options[i][option] = {\n            available: options[i][option] && options[i][option].available || variant.available\n          };\n        });\n      };\n\n      for (var i = 0; i < this.optionsCount; i++) {\n        _loop(i);\n      }\n\n      return options;\n    }\n  }]);\n  return Node;\n}();\n\nvar Options = function () {\n  function Options(product) {\n    classCallCheck(this, Options);\n\n    this.productHandle = product.handle;\n    this.optionsCount = product.options.length;\n    this.variants = product.variants;\n    this.nodeMap = {};\n\n    this._generateNodeMap(product);\n  }\n\n  createClass(Options, [{\n    key: \"_generateNodeMap\",\n    value: function _generateNodeMap() {\n      var _this2 = this;\n\n      this.variants.forEach(function (variant) {\n        _this2.nodeMap[variant.id] = new Node(variant);\n\n        _this2.variants.forEach(function (variant2) {\n          _this2.nodeMap[variant.id].addNeighbor(variant2);\n        });\n      });\n    }\n  }, {\n    key: \"getVariantFromOptions\",\n    value: function getVariantFromOptions(options) {\n      var variant = null;\n\n      this.variants.forEach(function (potentialVariant) {\n        var found = true;\n\n        for (var i = 0; i < potentialVariant.options.length; i++) {\n          if (options[i] !== potentialVariant.options[i]) {\n            found = false;\n          }\n        }\n\n        if (found) {\n          variant = potentialVariant;\n        }\n      });\n\n      return variant || false;\n    }\n  }, {\n    key: \"getClosestVariantFromOptions\",\n    value: function getClosestVariantFromOptions(options) {\n      var closestVariant = null;\n      var matchingValues = 0;\n\n      this.variants.forEach(function (variant) {\n        var tempMatchingValues = 0;\n\n        for (var i = 0; i < variant.options.length; i++) {\n          if (options[i] === variant.options[i]) {\n            tempMatchingValues++;\n          } else {\n            break;\n          }\n        }\n\n        if (tempMatchingValues >= matchingValues) {\n          closestVariant = variant;\n          matchingValues = tempMatchingValues;\n        }\n      });\n\n      return closestVariant ? closestVariant : false;\n    }\n  }, {\n    key: \"getVariantOrClosestFromOptions\",\n    value: function getVariantOrClosestFromOptions(options) {\n      return this.getVariantFromOptions(options) || this.getClosestVariantFromOptions(options);\n    }\n  }, {\n    key: \"getAvailableOptionsFromVariant\",\n    value: function getAvailableOptionsFromVariant(variant) {\n      return this.nodeMap[variant.id].getValidOptions();\n    }\n  }]);\n  return Options;\n}();\n\nvar Variants = function () {\n  function Variants(product, $variants, $options) {\n    classCallCheck(this, Variants);\n\n    this.product = product;\n    this.optionsCount = this.product.options.length;\n    this.$variants = $variants;\n    this.$options = $options;\n    this.options = new Options(this.product);\n    this.optionsTypes = {\n      select: 'select',\n      radio: 'input[type=\"radio\"]'\n    };\n\n    this._bindEvents();\n\n    if (this.$options.is(this.optionsTypes.select)) {\n      this.optionsType = this.optionsTypes.select;\n    } else if (this.$options.is(this.optionsTypes.radio)) {\n      this.optionsType = this.optionsTypes.radio;\n    } else {\n      console.warn('Shopify Variants: Option set is not a valid type');\n      this._unbindEvents();\n    }\n\n    this._switchVariant(true);\n  }\n\n  createClass(Variants, [{\n    key: '_bindEvents',\n    value: function _bindEvents() {\n      var _this = this;\n\n      this.$options.on('change.variants', function () {\n        return _this._switchVariant();\n      });\n    }\n  }, {\n    key: '_unbindEvents',\n    value: function _unbindEvents() {\n      this.$options.off('change.variants');\n    }\n  }, {\n    key: '_switchVariant',\n    value: function _switchVariant() {\n      var firstLoad = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var options = [];\n      var product = this.product;\n\n      var variant = null;\n      var availableOptions = null;\n\n      if (this.optionsType === this.optionsTypes.select) {\n        this.$options.each(function (i, option) {\n          options.push(option.value);\n        });\n      } else if (this.optionsType === this.optionsTypes.radio) {\n        this.$options.filter(':checked').each(function (i, option) {\n          options.push(option.value);\n        });\n      } else {\n        return;\n      }\n\n      variant = this.options.getVariantOrClosestFromOptions(options);\n\n      if (variant) {\n        availableOptions = this.options.getAvailableOptionsFromVariant(variant);\n      } else {\n        return;\n      }\n\n      if (this.optionsType === this.optionsTypes.select) {\n        this._switchVariantSelect(variant, availableOptions);\n      } else if (this.optionsType === this.optionsTypes.radio) {\n        this._switchVariantRadio(variant, availableOptions);\n      } else {\n        return;\n      }\n\n      this.$variants.val(variant.id);\n      $(window).trigger('shopify-variants:switch-variant', { product: product, variant: variant, firstLoad: firstLoad });\n    }\n  }, {\n    key: '_switchVariantSelect',\n    value: function _switchVariantSelect(variant, availableOptions) {\n      var _this2 = this;\n\n      var _loop = function _loop(i) {\n        // Corresponding select dropdown\n        var $select = $(_this2.$options[i]);\n        var $optionEls = $select.find('option');\n\n        // Iterate over each option on dropdown\n        $optionEls.each(function (index, option) {\n          var $option = $(option);\n          var value = option.value;\n\n          // Not an available option\n\n          $option.prop('disabled', !availableOptions[i][value] || !availableOptions[i][value].available).prop('selected', false);\n\n          // Dropdown option matches variant option\n          if (variant.options[i] === value) {\n            $option.prop('disabled', false).prop('selected', true);\n          }\n        });\n      };\n\n      // Iterate over each option type\n      for (var i = 0; i < this.product.options.length; i++) {\n        _loop(i);\n      }\n    }\n  }, {\n    key: '_switchVariantRadio',\n    value: function _switchVariantRadio(variant, availableOptions) {\n      var _this3 = this;\n\n      this.$options.attr('disabled', true).prop('checked', false).attr('data-soldout', false);\n\n      var _loop2 = function _loop2(i) {\n        var selector = encodeURIComponent(_this3.product.options[i]).replace(/%20/g, '+').replace(/[!'()*]/g, function (char) {\n          return '%' + char.charCodeAt(0).toString(16).toUpperCase();\n        });\n\n        var $options = _this3.$options.filter('[name=\"' + selector + '\"]');\n        $options.each(function (index, option) {\n          var $option = $(option);\n\n          if (variant.options[i] === $option.val()) {\n            $option.prop('checked', true);\n          }\n\n          if (availableOptions[i][$option.val()]) {\n            $option.attr('disabled', false);\n\n            if (!availableOptions[i][$option.val()].available) {\n              $option.attr('disabled', true);\n              $option.attr('data-soldout', true);\n            }\n          }\n        });\n      };\n\n      for (var i = 0; i < this.product.options.length; i++) {\n        _loop2(i);\n      }\n    }\n  }, {\n    key: 'isDefault',\n    value: function isDefault() {\n      if (this.product.variants[0].title === 'Default Title' && this.product.variants[0].option1 === 'Default Title') {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'hasSingleOption',\n    value: function hasSingleOption() {\n      return this.optionsCount === 1;\n    }\n  }, {\n    key: 'getSelectedVariant',\n    value: function getSelectedVariant() {\n      if (this.isDefault()) {\n        return this.product.variants[0];\n      }\n\n      var options = [];\n\n      if (this.optionsType === this.optionsTypes.select) {\n        this.$options.each(function (i, option) {\n          options.push(option.value);\n        });\n      } else if (this.optionsType === this.optionsTypes.radio) {\n        this.$options.filter(':checked').each(function (i, option) {\n          options.push(option.value);\n        });\n      } else {\n        return null;\n      }\n\n      return this.options.getVariantFromOptions(options);\n    }\n  }, {\n    key: 'unload',\n    value: function unload() {\n      this._unbindEvents();\n    }\n  }]);\n  return Variants;\n}();\n\nexport default Variants;\n","import $ from 'jquery';\n\nexport default class ImageZoom {\n  constructor({ el }) {\n    this.$el = $(el);\n    this.zoomArea = $('.product-zoom', this.$el);\n    if (this.zoomArea) {\n      this._bindEvents();\n      this.prepareZoom();\n      $(window).resize(() => this.prepareZoom());\n    }\n  }\n\n  _bindEvents() {\n    this.events = [\n      this.$el.on('prepare-zoom.zoom', event => this.prepareZoom(event)),\n      this.$el.on('click.zoom', event => this.toggleZoom(event)),\n      this.$el.on('cancel-zoom.zoom', event => this.toggleZoom(event)),\n      this.zoomArea.on('mouseout.zoom', event => this.toggleZoom(event)),\n      this.zoomArea.on('mousemove.zoom', event => this.zoomImage(event)),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.zoom'));\n  }\n\n  prepareZoom() {\n    const photoAreaWidth = this.$el.width();\n    const photoAreaHeight = this.$el.height();\n\n    const newImage = new Image();\n\n    $(newImage).on('load', () => {\n      this.zoomImageWidth = newImage.width;\n      this.zoomImageHeight = newImage.height;\n\n      const ratios = [];\n      ratios[0] = this.zoomImageWidth / photoAreaWidth;\n      ratios[1] = this.zoomImageHeight / photoAreaHeight;\n\n      const ratio = Math.max(...ratios);\n\n      // Only enable the zoom if a certain zooming ratio is met.\n      if (ratio < 1.4) {\n        this.$el.removeClass('zoom-enabled');\n        return;\n      }\n      this.$el.addClass('zoom-enabled');\n\n      this.zoomArea.css({ backgroundImage: `url(${newImage.src})` });\n    });\n\n    newImage.src = $('img', this.$el).attr('src');\n  }\n\n  toggleZoom(e) {\n    if (this.$el.hasClass('zoom-enabled')) {\n      if ((e.type === 'mouseout') || (e.type === 'cancel-zoom')) {\n        this.zoomArea.removeClass('active');\n        return;\n      }\n\n      if (this.zoomArea.hasClass('active')) {\n        this.zoomArea.removeClass('active');\n      } else {\n        this.zoomArea.addClass('active');\n      }\n\n      this.zoomImage(e);\n    }\n  }\n\n  zoomImage(e) {\n    const zoomWidth = this.zoomArea.width();\n    const zoomHeight = this.zoomArea.height();\n\n    const bigImageOffset = this.$el.offset();\n    const bigImageX = Math.round(bigImageOffset.left);\n    const bigImageY = Math.round(bigImageOffset.top);\n\n    const mousePositionX = e.pageX - bigImageX;\n    const mousePositionY = e.pageY - bigImageY;\n\n    // Make sure our mouse position is still inside our box.\n    if (\n      (mousePositionX < zoomWidth)\n      && (mousePositionY < zoomHeight)\n      && (mousePositionX > 0)\n      && (mousePositionY > 0)\n    ) {\n      if (this.zoomArea.hasClass('active')) {\n        // Figure out how to position the zoomed image.\n        let ratioX = Math.round(((mousePositionX / zoomWidth) * this.zoomImageWidth) - (zoomWidth / 2)) * -1;\n        let ratioY = Math.round(((mousePositionY / zoomHeight) * this.zoomImageHeight) - (zoomHeight / 2)) * -1;\n\n        if (ratioX > 0) { ratioX = 0; }\n        if (ratioY > 0) { ratioY = 0; }\n\n        if (ratioX < -(this.zoomImageWidth - zoomWidth)) { ratioX = -(this.zoomImageWidth - zoomWidth); }\n        if (ratioY < -(this.zoomImageHeight - zoomHeight)) { ratioY = -(this.zoomImageHeight - zoomHeight); }\n\n        const newBackgroundPosition = `${ratioX}px ${ratioY}px`;\n\n        this.zoomArea.css({ backgroundPosition: newBackgroundPosition });\n      }\n    }\n  }\n\n  unload() {\n    this._unbindEvents();\n  }\n}\n","import $ from 'jquery';\nimport rimg from 'rimg-shopify';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport ShopifyVariants from 'shopify-variants';\nimport ImageZoom from '../utils/ImageZoom';\nimport Rte from '../utils/Rte';\n\nexport default class StaticProduct {\n  constructor({ el, data, type }) {\n    this.$el = $(el);\n\n    this.sectionType = type;\n    this.data = data;\n    this.product = data.product;\n    this.cartText = data.cartText;\n    this.zoomEnabled = data.sectionSettings.enable_zoom;\n    this.enableSendToCart = data.sectionSettings.enable_send_to_cart;\n\n    this.$options = this.$el.find('[data-product-option]');\n    this.$variants = this.$el.find('[data-variants]');\n    this.$form = this.$el.find('.product-form form');\n\n    this.timeouts = [];\n    this.isThemeEditor = window.Shopify && window.Shopify.designMode;\n    this.images = JSON.parse($('[data-images]', this.$el).text());\n\n    this._bindEvents();\n\n    if (this.$form.length) {\n      this.variantHelper = new ShopifyVariants(this.product, this.$variants, this.$options);\n    }\n\n    if (this.zoomEnabled && $('.product-images', this.$el).length) {\n      this.zoomView = new ImageZoom({ el: $('.product-main-image', this.$el) });\n    }\n\n    Shopify.onError = XMLHttpRequest => this._handleErrors(XMLHttpRequest);\n\n    this.$el.find('.rte').each((index, rte) => { this.rte = new Rte({ el: rte }); });\n\n    if (Shop.currencySwitcher) {\n      $('.currency-switcher').trigger('switch-currency');\n    }\n  }\n\n  _bindEvents() {\n    this.events = [\n      this.$el.find('.product-thumbnails img').on('click.productview', e => this._onSwapImage(e)),\n      this.$el.find('.product-form').on('submit.productview', e => this._addToCart(e)),\n      $(window).on('shopify-variants:switch-variant.productview', (event, data) => {\n        this._changeVariant(data);\n      }),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.productview'));\n  }\n\n  _onSwapImage(event) {\n    this._swapImage($(event.target).data('image-id'));\n  }\n\n  _swapImage(imageId) {\n    const $nextImageWrapper = $(this.images[imageId]);\n    $nextImageWrapper.css('display', 'none');\n    const $nextImages = $nextImageWrapper.find('img');\n\n    const $imageWrapper = $('.product-main-image [data-product-image]', this.$el);\n    const $images = $imageWrapper.find('img');\n\n    rimg.unwatch($images[0]);\n\n    $nextImages.one('load', () => {\n      $imageWrapper.remove();\n      $nextImageWrapper.css('display', '');\n      rimg.watch($nextImages[0]);\n\n      if (this.zoomEnabled) {\n        const $productMainImage = $('.product-main-image', this.$el);\n        $productMainImage.trigger('cancel-zoom');\n        $productMainImage.trigger('prepare-zoom');\n      }\n    });\n\n    $imageWrapper.after($nextImageWrapper);\n  }\n\n  _changeVariant({ product, variant, firstLoad }) {\n    if (firstLoad || this.product !== product) {\n      return;\n    }\n\n    // Update label\n    ['option1', 'option2', 'option3'].forEach((optionNumber) => {\n      if (variant[optionNumber]) {\n        this.$el.find(`[data-selected-${optionNumber}]`).text(variant[optionNumber]);\n      }\n    });\n\n    // Update URL\n    if (this.data.enableHistory) {\n      this._changeUrl(variant);\n    }\n\n    // Load image\n    if (variant.featured_image) {\n      this._swapImage(variant.featured_image.id);\n    } else if (this.images.defaultImageId) {\n      this._swapImage(this.images.defaultImageId);\n    }\n\n    // Compare at price\n    this.$el.find('[data-variant-compare-at-price]')\n      .toggleClass(\n        'hidden',\n        (\n          !variant.compare_at_price\n          || variant.price === variant.compare_at_price\n        ),\n      )\n      .text(Shopify.formatMoney(variant.compare_at_price, Shop.moneyFormat))\n      .each((index, el) => CurrencyConverter.update(el));\n\n    // Price\n    this.$el.find('[data-variant-price]')\n      .text(Shopify.formatMoney(variant.price, Shop.moneyFormat))\n      .each((index, el) => CurrencyConverter.update(el));\n  }\n\n  _changeUrl(variant) {\n    if (this.isThemeEditor) {\n      return;\n    }\n\n    const params = $.param({ variant: variant.id });\n    const url = `${ this.product.handle }?${params}`;\n    history.replaceState({}, 'variant', url);\n  }\n\n  _addToCart(e) {\n    e.preventDefault();\n\n    $.ajax({\n      type: 'POST',\n      url: '/cart/add.js',\n      data: this.$form.serialize(),\n      dataType: 'json',\n    })\n      // On success\n      .done(() => {\n\n        if (this.enableSendToCart) {\n          window.location.href = '/cart';\n          return;\n        }\n\n        $('.cart-count').addClass('active-cart');\n\n        const message = this.data.message\n          .replace('{{ product }}', this.product.title)\n          .replace('{{ cart_link }}', `<a href='/cart'>${this.data.cartLink}</a>`)\n          .replace('{{ continue_link }}', `<a href='/collections/all'>${this.data.continueLink}</a>`)\n          .replace('{{ checkout_link }}', `<a href='/checkout'>${this.data.checkoutLink}</a>`);\n\n        this.timeouts.push(setTimeout(() => {\n          this.$el.find('.product-message', this.$el).html(message).addClass('success-message').removeClass('error-message');\n          this._updateCart();\n        },\n        500));\n      })\n      // On failure\n      .fail(response => this._handleErrors(response));\n  }\n\n  _updateCart() {\n    return Shopify.getCart((cart) => {\n      const cartCountText = cart.item_count === 1 ? this.cartText[0] : this.cartText[1];\n      $('.bag-count').text(cart.item_count);\n      $('.bag-text').html(cartCountText);\n    });\n  }\n\n  _handleErrors(response) {\n    const error = JSON.parse(response.responseText);\n\n    $('.product-form', this.$el).append(`<div class=\"error-message\">${error.description}</div>`);\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n    if (this.zoomView) {\n      this.zoomView.unload();\n    }\n    if (this.variantHelper) {\n      this.variantHelper.unload();\n    }\n    this.timeouts.forEach(timeout => clearTimeout(timeout));\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'debounce';\n\nfunction setExpanded(e) {\n  const $link = $(e.currentTarget);\n  $link.attr('aria-expanded', true);\n}\n\nfunction unsetExpanded(e) {\n  const $link = $(e.currentTarget);\n  $link.attr('aria-expanded', false);\n}\n\nexport default class MegaNavigation {\n  constructor({ el }) {\n    this.$el = $(el);\n    this.initializedClass = 'navigation-initialized';\n\n    this._bindEvents();\n    this.timeouts = [];\n    this._validate();\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.mobile-navigation-toggle', this.$el).on('click.meganav', event => this.toggleMobileNavigation(event)),\n      $('.mobile-tier-toggle', this.$el).on('click.meganav', event => this.toggleMobileTier(event)),\n      $('.has-chidren > a', this.$el).on('click.meganav', event => this.changeTier(event)),\n      $('.mega-nav-breadcrumbs span', this.$el).on('click.meganav', event => this.previousTier(event)),\n      $('.bacon-menu-button', this.$el).on('click.meganav', event => this.baconMenu(event)),\n      $('[aria-haspopup]', this.$el).on('mouseenter.meganav', event => setExpanded(event)),\n      $('[aria-haspopup]', this.$el).on('mouseleave.meganav', event => unsetExpanded(event)),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.meganav'));\n  }\n\n  update($el) {\n    this.$el = $el;\n    this._validate();\n  }\n\n  _validate() {\n    this.body = $(document.body);\n    this.navigation = $('.navigation', this.$el);\n    this.windowWidth = document.documentElement.clientWidth;\n    this.checkDropdownWidth();\n\n    if ($('li.mega-nav', this.$el).length) { this.prepareMegaNav(); }\n\n    $(window).on('resize', () => {\n      this.setWindowWidth();\n      if ($('li.mega-nav', this.$el).length) { this.prepareMegaNav(); }\n      if (this.navigation.hasClass('mobile-visible') && (this.windowWidth > 1020)) {\n        this.navigation.removeClass('mobile-visible');\n        this.resetHeights();\n      }\n    });\n  }\n\n  setWindowWidth() {\n    this.windowWidth = document.documentElement.clientWidth;\n  }\n\n  // Support for (Bacon Menu)[https://apps.shopify.com/bacon-menu]\n  baconMenu(event) {\n    const $linkItem = $(event.currentTarget);\n    const $menuWrapper = $linkItem.parents('.tier-1');\n    $menuWrapper.find('li').css('height', '');\n\n    $('.bacon-menu-button.active', this.$el).each((index, element) => {\n      const $current = $(element);\n\n      if ($current.next('div').is(':hidden')) {\n        $current.removeClass('active');\n      }\n    });\n  }\n\n  checkDropdownWidth() {\n    $('.tier-1 > .has-dropdown', this.$el).each((index, item) => {\n      const $item = $(item);\n\n      if (!$item.hasClass('mega-nav')) {\n        const itemOffset = $item.offset();\n\n        if ($item.find('.tier-2').length && ((itemOffset.left + 200) > this.windowWidth)) {\n          $item.addClass('alternate-drop');\n        }\n\n        if ($item.find('.tier-3').length && ((itemOffset.left + 400) > this.windowWidth)) {\n          $item.addClass('alternate-drop');\n        }\n      }\n    });\n  }\n\n  toggleMobileNavigation() {\n    if (!this.navigation.hasClass('processed')) {\n      $(window).on('resize', () => debounce(() => {\n        if (this.windowWidth > 1020) { this.resetHeights(); }\n      },\n      500));\n\n      this.navigation.addClass('processed');\n    }\n\n    const firstTier = $('.tier-1', this.$el);\n\n    if (this.navigation.hasClass('mobile-visible')) {\n      // Support for (Bacon Menu)[https://apps.shopify.com/bacon-menu]\n      if (this.body.hasClass('bacon-menu-loaded')) {\n        this.navigation.find('.bacon-menu-button.active').each((index, element) => {\n          $(element).trigger('click');\n        });\n        this.navigation.find('.bacon-highway-mobile.active').each((index, element) => {\n          $(element).trigger('click');\n        });\n      }\n\n      this.navigation.removeClass('mobile-visible');\n      this.resetHeights();\n    } else {\n      const height = this.getHiddenHeight(firstTier);\n      firstTier.addClass('open');\n      this.timeouts.push(setTimeout((() => {\n        this.navigation.addClass('mobile-visible');\n        $('.mobile-navigation-toggle', this.$el).addClass('active');\n        firstTier.css('height', height);\n      }\n      ), 50));\n    }\n  }\n\n  toggleMobileTier(e) {\n    let height;\n    e.preventDefault();\n    e.stopPropagation();\n\n    const parent = $(e.target).closest('.has-dropdown, .mega-nav, .mega-nav-item, .has-children');\n    const list = parent.find('> ul');\n\n    if (parent.hasClass('open')) {\n      height = list.height();\n      list.parents('ul')\n        .css('height', `-=${height}`);\n      list.find('.open')\n        .removeClass('open')\n        .find('> ul')\n        .css('height', '');\n      this.events.push(list.height(0).one('transitionend.meganav', () => parent.removeClass('open')));\n    } else {\n      height = this.getHiddenHeight(list);\n      parent.addClass('open');\n      list.css('height', height);\n      list.parents('ul').css('height', `+=${height}`);\n    }\n  }\n\n  getHiddenHeight(elem) {\n    const temp = $(elem).clone().addClass('cloned-list').appendTo(this.navigation);\n\n    const height = temp.height();\n    temp.remove();\n    return height;\n  }\n\n  resetHeights() {\n    $('ul', this.$el).each((index, list) => {\n      const $list = $(list);\n      $list.parent('li').css('min-height', '');\n      $list.css('min-height', '').css('height', '').parent().removeClass('open');\n    });\n\n    $('.mobile-navigation-toggle', this.$el).removeClass('active');\n  }\n\n  prepareMegaNav() {\n    this.$el.toggleClass(this.initializedClass, true);\n\n    this.megaNavDropdown = $('.mega-nav-dropdown', this.$el);\n\n    if (this.windowWidth > 1020) {\n      const navigationWidth = this.navigation.width();\n\n      this.megaNavDropdown.css({\n        width: navigationWidth,\n        marginLeft: -(navigationWidth / 2),\n      });\n    } else {\n      this.megaNavDropdown.css({\n        top: '',\n        width: '',\n        marginLeft: '',\n      });\n    }\n  }\n\n  setMegaNav() {\n    if (this.windowWidth < 1021) { return; }\n\n    const firstTierHeight = this.megaNavDropdown.height();\n    this.megaNavDropdown.data('first-tier-height', firstTierHeight).height(firstTierHeight);\n  }\n\n  resetMegaNav(e) {\n    if (this.windowWidth < 1021) { return; }\n\n    if (e && $(e.relatedTarget).closest('.mega-nav').length) { return; }\n\n    this.megaNavDropdown.height(this.megaNavDropdown.data('first-tier-height'));\n    $('.active', this.$el).removeClass('active');\n  }\n\n  changeTier(e) {\n    if (this.windowWidth < 1021) { return; }\n\n    e.preventDefault();\n\n    $(e.currentTarget).addClass('working');\n\n    const nextTier = $(e.currentTarget).next('ul');\n    const nextTierHeight = nextTier.outerHeight();\n    const currentHeight = this.megaNavDropdown.height();\n\n    if (currentHeight < nextTierHeight) {\n      this.megaNavDropdown.height(nextTierHeight);\n    } else {\n      nextTier.css({ bottom: 0 });\n    }\n\n    $(e.currentTarget).removeClass('working').addClass('active');\n  }\n\n  previousTier(e) {\n    if ($(e.currentTarget).hasClass('current-tier')) { return; }\n\n    if ($(e.currentTarget).hasClass('tier-1')) {\n      $('.active', this.$el).removeClass('active');\n      this.megaNavDropdown.height(this.megaNavDropdown.data('first-tier-height'));\n    } else {\n      $(e.currentTarget).closest('ul').siblings('.active').removeClass('active');\n      const previousTierHeight = $(e.currentTarget).closest('.mega-nav-tier-2').outerHeight();\n      this.megaNavDropdown.height(previousTierHeight);\n    }\n\n    if (!$('.active', this.$el).length) {\n      this.resetMegaNav();\n    }\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n    this.timeouts.forEach(timeout => clearTimeout(timeout));\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport MegaNavigation from './MegaNavigation';\n\nexport default class Header {\n  constructor(section) {\n    this.$el = $(section.el);\n    this._bindEvents();\n    this.megaNav = new MegaNavigation({ el: this.$el[0] });\n\n    if (window.Pacific.settings.enable_currency_converter) {\n      this.currency = section.data.currency;\n      this.converter = '[data-currency-converter]';\n      this.priceSelector = '.money';\n      this.$converter = $(this.converter);\n      this._converter();\n    }\n  }\n\n  _bindEvents() {\n    this.events = [\n      $('.mobile-header-search-toggle', this.$el).on('click.header', this.toggleSearch),\n      $('.header-search-input', this.$el).on('blur.header', this.toggleSearch),\n    ];\n  }\n\n  _unbindEvents() {\n    this.events.forEach($el => $el.off('.header'));\n  }\n\n  _converter() {\n    CurrencyConverter.init({\n      switcherSelector: this.converter,\n      priceSelector: this.priceSelector,\n      shopCurrency: this.currency.shop_currency,\n      defaultCurrency: this.currency.default_currency,\n      displayFormat: this.currency.display_format,\n      moneyFormat: this.currency.money_format,\n      moneyFormatNoCurrency: this.currency.money_format_no_currency,\n      moneyFormatCurrency: this.currency.money_format_currency,\n    });\n\n    this._setCurrencyText();\n\n    this.events.push(\n      this.$converter.first().on('updateCurrency.header', (event, target) => this._updateCurrency(event, target)),\n      this.$converter.on('change.header', (event) => {\n        this.$converter.each((index, converter) => {\n          if (converter.value !== event.currentTarget.value) {\n            converter.value = event.currentTarget.value;\n          }\n        });\n\n        CurrencyConverter.setCurrency(event.currentTarget.value);\n        this._setCurrencyText();\n      }),\n    );\n  }\n\n  _setCurrencyText() {\n    // this is unscoped because in mobile view the currency selector is in the footer\n    // (outside of this.$el)\n    $('.selected-currency').text(this.$converter.val());\n  }\n\n  _updateCurrency(event, target) {\n    $(this.priceSelector, target).each((index, moneyEl) => {\n      CurrencyConverter.update(moneyEl);\n    });\n  }\n\n  toggleSearch() {\n    if (!(document.documentElement.clientWidth > 1020)) {\n      const form = $('.header-search-form', this.$el);\n\n      if (form.hasClass('active')) {\n        form.removeClass('active');\n      }\n      form.addClass('active').find('input').focus();\n    }\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n  }\n}\n","import $ from 'jquery';\n\nfunction toggleDropdown(e) {\n  if (document.documentElement.clientWidth < 721) {\n    e.preventDefault();\n    $(e.target).parent().toggleClass('open');\n\n    return false;\n  }\n  return undefined;\n}\n\nexport default class Sidebar {\n  constructor({ el }) {\n    this.$el = $(el);\n    $('.has-children > a', this.$el).on('click', toggleDropdown);\n  }\n}\n","/*********************************************************************\n*  #### Twitter Post Fetcher v17.0.3 ####\n*  Coded by Jason Mayes 2015. A present to all the developers out there.\n*  www.jasonmayes.com\n*  Please keep this disclaimer with my code if you use it. Thanks. :-)\n*  Got feedback or questions, ask here:\n*  http://www.jasonmayes.com/projects/twitterApi/\n*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher\n*  Updates will be posted to this site.\n*********************************************************************/\n(function(root,factory){if(typeof define==='function'&&define.amd){define([],factory);}else if(typeof exports==='object'){module.exports=factory();}else{factory();}}(this,function(){var domNode='';var maxTweets=20;var parseLinks=true;var queue=[];var inProgress=false;var printTime=true;var printUser=true;var formatterFunction=null;var supportsClassName=true;var showRts=true;var customCallbackFunction=null;var showInteractionLinks=true;var showImages=false;var useEmoji=false;var targetBlank=true;var lang='en';var permalinks=true;var dataOnly=false;var script=null;var scriptAdded=false;function handleTweets(tweets){if(customCallbackFunction===null){var x=tweets.length;var n=0;var element=document.getElementById(domNode);var html='<ul>';while(n<x){html+='<li>'+tweets[n]+'</li>';n++;}\nhtml+='</ul>';element.innerHTML=html;}else{customCallbackFunction(tweets);}}\nfunction strip(data){return data.replace(/<b[^>]*>(.*?)<\\/b>/gi,function(a,s){return s;}).replace(/class=\"(?!(tco-hidden|tco-display|tco-ellipsis))+.*?\"|data-query-source=\".*?\"|dir=\".*?\"|rel=\".*?\"/gi,'');}\nfunction targetLinksToNewWindow(el){var links=el.getElementsByTagName('a');for(var i=links.length-1;i>=0;i--){links[i].setAttribute('target','_blank');}}\nfunction getElementsByClassName(node,classname){var a=[];var regex=new RegExp('(^| )'+classname+'( |$)');var elems=node.getElementsByTagName('*');for(var i=0,j=elems.length;i<j;i++){if(regex.test(elems[i].className)){a.push(elems[i]);}}\nreturn a;}\nfunction extractImageUrl(image_data){if(image_data!==undefined&&image_data.innerHTML.indexOf('data-image')>=0){var data_src=image_data.innerHTML.match(/data-image=\\\"([A-z0-9]+:\\/\\/[A-z0-9]+\\.[A-z0-9]+\\.[A-z0-9]+\\/[A-z0-9]+\\/[A-z0-9\\-]+)/i)[1];return decodeURIComponent(data_src)+'.jpg';}}\nvar twitterFetcher={fetch:function(config){if(config.maxTweets===undefined){config.maxTweets=20;}\nif(config.enableLinks===undefined){config.enableLinks=true;}\nif(config.showUser===undefined){config.showUser=true;}\nif(config.showTime===undefined){config.showTime=true;}\nif(config.dateFunction===undefined){config.dateFunction='default';}\nif(config.showRetweet===undefined){config.showRetweet=true;}\nif(config.customCallback===undefined){config.customCallback=null;}\nif(config.showInteraction===undefined){config.showInteraction=true;}\nif(config.showImages===undefined){config.showImages=false;}\nif(config.useEmoji===undefined){config.useEmoji=false;}\nif(config.linksInNewWindow===undefined){config.linksInNewWindow=true;}\nif(config.showPermalinks===undefined){config.showPermalinks=true;}\nif(config.dataOnly===undefined){config.dataOnly=false;}\nif(inProgress){queue.push(config);}else{inProgress=true;domNode=config.domId;maxTweets=config.maxTweets;parseLinks=config.enableLinks;printUser=config.showUser;printTime=config.showTime;showRts=config.showRetweet;formatterFunction=config.dateFunction;customCallbackFunction=config.customCallback;showInteractionLinks=config.showInteraction;showImages=config.showImages;useEmoji=config.useEmoji;targetBlank=config.linksInNewWindow;permalinks=config.showPermalinks;dataOnly=config.dataOnly;var head=document.getElementsByTagName('head')[0];if(script!==null){head.removeChild(script);}\nscript=document.createElement('script');script.type='text/javascript';if(config.list!==undefined){script.src='https://syndication.twitter.com/timeline/list?'+'callback=__twttrf.callback&dnt=false&list_slug='+\nconfig.list.listSlug+'&screen_name='+config.list.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.profile!==undefined){script.src='https://syndication.twitter.com/timeline/profile?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.profile.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.likes!==undefined){script.src='https://syndication.twitter.com/timeline/likes?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.likes.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else{script.src='https://cdn.syndication.twimg.com/widgets/timelines/'+\nconfig.id+'?&lang='+(config.lang||lang)+'&callback=__twttrf.callback&'+'suppress_response_codes=true&rnd='+Math.random();}\nhead.appendChild(script);}},callback:function(data){if(data===undefined||data.body===undefined){inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}\nreturn;}\nif(!useEmoji){data.body=data.body.replace(/(<img[^c]*class=\"Emoji[^>]*>)|(<img[^c]*class=\"u-block[^>]*>)/g,'');}\nif(!showImages){data.body=data.body.replace(/(<img[^c]*class=\"NaturalImage-image[^>]*>|(<img[^c]*class=\"CroppedImage-image[^>]*>))/g,'');}\nif(!printUser){data.body=data.body.replace(/(<img[^c]*class=\"Avatar\"[^>]*>)/g,'');}\nvar div=document.createElement('div');div.innerHTML=data.body;if(typeof(div.getElementsByClassName)==='undefined'){supportsClassName=false;}\nfunction swapDataSrc(element){var avatarImg=element.getElementsByTagName('img')[0];if(avatarImg && avatarImg.length){avatarImg.src=avatarImg.getAttribute('data-src-2x');}return element;}\nvar tweets=[];var authors=[];var times=[];var images=[];var rts=[];var tids=[];var permalinksURL=[];var x=0;if(supportsClassName){var tmp=div.getElementsByClassName('timeline-Tweet');while(x<tmp.length){if(tmp[x].getElementsByClassName('timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(tmp[x].getElementsByClassName('timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(tmp[x].getElementsByClassName('timeline-Tweet-author')[0]));}\ntimes.push(tmp[x].getElementsByClassName('dt-updated')[0]);permalinksURL.push(tmp[x].getElementsByClassName('timeline-Tweet-timestamp')[0]);if(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]!==undefined){images.push(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}else{var tmp=getElementsByClassName(div,'timeline-Tweet');while(x<tmp.length){if(getElementsByClassName(tmp[x],'timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(getElementsByClassName(tmp[x],'timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(getElementsByClassName(tmp[x],'timeline-Tweet-author')[0]));}\ntimes.push(getElementsByClassName(tmp[x],'dt-updated')[0]);permalinksURL.push(getElementsByClassName(tmp[x],'timeline-Tweet-timestamp')[0]);if(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]!==undefined){images.push(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}\nif(tweets.length>maxTweets){tweets.splice(maxTweets,(tweets.length-maxTweets));authors.splice(maxTweets,(authors.length-maxTweets));times.splice(maxTweets,(times.length-maxTweets));rts.splice(maxTweets,(rts.length-maxTweets));images.splice(maxTweets,(images.length-maxTweets));permalinksURL.splice(maxTweets,(permalinksURL.length-maxTweets));}\nvar arrayTweets=[];var x=tweets.length;var n=0;if(dataOnly){while(n<x){arrayTweets.push({tweet:tweets[n].innerHTML,author:authors[n]?authors[n].innerHTML:'Unknown Author',author_data:{profile_url:authors[n]?authors[n].querySelector('[data-scribe=\"element:user_link\"]').href:null,profile_image:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-1x'):null,profile_image_2x:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-2x'):null,screen_name:authors[n]?authors[n].querySelector('[data-scribe=\"element:screen_name\"]').title:null,name:authors[n]?authors[n].querySelector('[data-scribe=\"element:name\"]').title:null},time:times[n].textContent,timestamp:times[n].getAttribute('datetime').replace('+0000','Z').replace(/([\\+\\-])(\\d\\d)(\\d\\d)/,'$1$2:$3'),image:extractImageUrl(images[n]),rt:rts[n],tid:tids[n],permalinkURL:(permalinksURL[n]===undefined)?'':permalinksURL[n].href});n++;}}else{while(n<x){if(typeof(formatterFunction)!=='string'){var datetimeText=times[n].getAttribute('datetime');var newDate=new Date(times[n].getAttribute('datetime').replace(/-/g,'/').replace('T',' ').split('+')[0]);var dateString=formatterFunction(newDate,datetimeText);times[n].setAttribute('aria-label',dateString);if(tweets[n].textContent){if(supportsClassName){times[n].textContent=dateString;}else{var h=document.createElement('p');var t=document.createTextNode(dateString);h.appendChild(t);h.setAttribute('aria-label',dateString);times[n]=h;}}else{times[n].textContent=dateString;}}\nvar op='';if(parseLinks){if(targetBlank){targetLinksToNewWindow(tweets[n]);if(printUser){targetLinksToNewWindow(authors[n]);}}\nif(printUser){op+='<div class=\"user\">'+strip(authors[n].innerHTML)+'</div>';}\nop+='<p class=\"tweet\">'+strip(tweets[n].innerHTML)+'</p>';if(printTime){if(permalinks){op+='<p class=\"timePosted\"><a href=\"'+permalinksURL[n]+'\">'+times[n].getAttribute('aria-label')+'</a></p>';}else{op+='<p class=\"timePosted\">'+\ntimes[n].getAttribute('aria-label')+'</p>';}}}else{if(tweets[n].textContent){if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}else{if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}}\nif(showInteractionLinks){op+='<p class=\"interact\"><a href=\"https://twitter.com/intent/'+'tweet?in_reply_to='+tids[n]+'\" class=\"twitter_reply_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Reply</a><a href=\"https://twitter.com/intent/retweet?'+'tweet_id='+tids[n]+'\" class=\"twitter_retweet_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Retweet</a>'+'<a href=\"https://twitter.com/intent/favorite?tweet_id='+\ntids[n]+'\" class=\"twitter_fav_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Favorite</a></p>';}\nif(showImages&&images[n]!==undefined&&extractImageUrl(images[n])!==undefined){op+='<div class=\"media\">'+'<img src=\"'+extractImageUrl(images[n])+'\" alt=\"Image from tweet\" />'+'</div>';}\nif(showImages){arrayTweets.push(op);}else if(!showImages&&tweets[n].textContent.length){arrayTweets.push(op);}\nn++;}}\nhandleTweets(arrayTweets);inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}}};window.__twttrf=twitterFetcher;window.twitterFetcher=twitterFetcher;return twitterFetcher;}));\n","import $ from 'jquery';\nimport twitterFetcher from 'twitter-fetcher';\n\nexport default class Footer {\n  constructor({ el }) {\n    this.$el = $(el);\n    this._validate();\n  }\n\n  update($el) {\n    this.$el = $el;\n    this._validate();\n  }\n\n  _validate() {\n    this.instagramToken = $('.footer-instagram', this.$el).data('instagram-access-token');\n    this.twitterId = $('.footer-tweet', this.$el).data('twitter-id');\n    this.twitterRetweets = $('.footer-tweet', this.$el).data('twitter-retweets');\n\n    if ($('.footer-instagram', this.$el).length && this.instagramToken.length) {\n      this.count = $('.footer-instagram', this.$el).data('instagram-count') * 1;\n      this.fetchInstagramPhotos();\n    }\n\n    if ($('.twitter-enabled', this.$el).length) {\n      this.fetchTweets(this.twitterId, this.twitterRetweets);\n    }\n  }\n\n  fetchInstagramPhotos() {\n    const url = `https://api.instagram.com/v1/users/self/media/recent?access_token=${this.instagramToken}&count=${this.count}&callback=?`;\n\n    $.ajax(url, {\n      type: 'GET',\n      dataType: 'jsonp',\n      timeout: 10000,\n      error: (jqXHR, textStatus) => {\n        $('.footer-instagram', this.$el).hide();\n        console.log(`Instagram Error: ${textStatus}`);\n\n        if (textStatus === 'timeout') {\n          console.log('A timeout error means that either the API is down or the merchant provided an incorrect User ID causing a 404.');\n        }\n      },\n\n      success: (query) => {\n        let i;\n        if (this.count === 3) { i = 2; } else { i = 5; }\n\n        if (query.meta.code === 200) {\n          (() => {\n            query.data.slice(0, +i + 1 || undefined).forEach((photo) => {\n              const image = photo.images.standard_resolution;\n              const scale = image.width > image.height ? 'y' : 'x';\n\n              $('.footer-instagram-photos')\n                .append(`\\\n<div class=\"footer-instagram-photo\">\n        <a\n            class=\"instagram-link\"\n            href=\"${photo.link}\"\n            target=\"_blank\"\n        >\n            <img\n                class=\"\n                    instagram-image\n                    instagram-image-scale-${scale}\n                \"\n                src=\"${image.url}\"\n            />\n        </a>\n</div>\\\n`);\n            });\n          })();\n        } else {\n          $('.footer-instagram', this.$el).hide();\n          console.log(`Instagram Error: ${query.meta.error_message}`);\n        }\n      },\n    });\n  }\n\n  fetchTweets() {\n    const config = {\n      profile: { screenName: this.twitterId },\n      maxTweets: 1,\n      enableLinks: true,\n      showUser: true,\n      showTime: true,\n      showRetweet: this.twitterRetweets,\n      customCallback: (tweets) => this.renderTweets(tweets),\n      showInteraction: false,\n    };\n\n    twitterFetcher.fetch(config);\n  }\n\n  renderTweets(tweets) {\n    if (tweets.length) {\n      $('.footer-tweet', this.$el).append(`<span class='tweet-wrap'>${tweets[0]}</span>`);\n    } else {\n      console.log('No tweets to display. Most probably cause is an incorrectly entered Widget ID.');\n    }\n  }\n}\n","// jQuery\nimport './utils/jquery';\nimport $ from 'jquery';\nimport $script from 'scriptjs';\n\n// Shared Components\nimport ShopifySectionsManager from 'shopify-sections-manager';\nimport 'intersection-observer/intersection-observer';\nimport rimg from 'rimg-shopify';\nimport PxsMap from 'pxs-map';\n\n// Utils\nimport Rte from './utils/Rte';\nimport ThemeUtils from './utils/ThemeUtils';\n\n// Templates\nimport TemplateAccount from './templates/TemplateAccount';\nimport TemplateCollection from './templates/TemplateCollection';\nimport TemplateGiftCard from './templates/TemplateGiftCard';\nimport TemplateListCollections from './templates/TemplateListCollections';\nimport TemplatePassword from './templates/TemplatePassword';\n\n// Sections\nimport DynamicSlideshow from './sections/DynamicSlideshow';\nimport DynamicVideo from './sections/DynamicVideo';\nimport StaticCart from './sections/StaticCart';\nimport StaticProduct from './sections/StaticProduct';\n\n// Components\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Footer from './components/Footer';\n\nconst scripts = $('[data-scripts]');\n\nclass Pacific {\n  constructor() {\n    window.ThemeUtils = ThemeUtils;\n    this.$el = $(document.body);\n    this.render();\n  }\n\n  render() {\n    // Common views\n    this.sections = new ShopifySectionsManager();\n\n    this.sections.register('header', section => new Header(section));\n    this.sections.register('footer', section => new Footer(section));\n    this.sections.register('slideshow', section => new DynamicSlideshow(section));\n    this.sections.register('featured-video', section => new DynamicVideo(section));\n    this.sections.register('pxs-map', section => new PxsMap(section));\n    this.sections.register('featured-product', section => new StaticProduct(section));\n    this.sections.register('page-product', section => new StaticProduct(section));\n    this.sections.register('page-collection', section => new TemplateCollection(section));\n    this.sections.register('page-collections-list', section => new TemplateListCollections(section));\n    this.sections.register('page-cart', section => new StaticCart(section));\n\n    $('.rte').each((index, rte) => { this.rte = new Rte({ el: rte }); });\n\n    if (window.Pacific.settings['enable-sidebar']) { this.sidebar = new Sidebar({ el: $('.sidebar') }); }\n\n    // Conditional views\n    if (this.$el.attr('class').indexOf('-customers-') > 0) {\n      this.templateAccount = new TemplateAccount({ el: this.$el });\n    }\n    if (this.$el.hasClass('template-password')) {\n      this.templatePassword = new TemplatePassword({ el: this.$el });\n    }\n    if (this.$el.hasClass('gift-card-template')) {\n      this.templateGiftCard = new TemplateGiftCard();\n    }\n\n    rimg.init();\n  }\n}\n\n$script([\n  scripts.data('countries-url'),\n  scripts.data('shopify-currencies-url'),\n  scripts.data('customer-area-url'),\n  scripts.data('shopify-api-url'),\n  scripts.data('jquery-templates-url'),\n  scripts.data('shopify-common-url'),\n],\n() => {\n  $script([\n    scripts.data('jquery-cart-url'),\n    scripts.data('jquery-currencies-url'),\n  ],\n  () => {\n    window.Pacific.theme = new Pacific();\n  });\n});\n"],"names":["this","define","window","jQuery","$","rimg","classCallCheck","$script","init","update","createClass","init$1","update$1","updateOption","e","selector","select","target","newOption","find","text","siblings","Rte","el","$el","setupTabs","_bindEvents","each","index","parent","length","wrap","prepend","events","on","groupedContent","GroupedContent","get","layout","intelliparse","dest","objs","obj","k","v","innerWidth","width","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","setTimeout","rect","getBoundingClientRect","bounds","top","bottom","innerHeight","document","documentElement","clientHeight","array","key","asc","end","output","result","value","push","ModalContent","content","title","message","button","require$$0","ModalView","model","body","enterContent","openModal","closeModal","event","forEach","off","html","append","modalContentHeight","outerHeight","modalContentWidth","outerWidth","height","css","addClass","removeClass","centerModal","debounce","type","keyCode","one","_unbindEvents","recoverPassword","toggle","checkForReset","data","show","deleteAddress","addressID","parents","CustomerAddress","destroy","editAddress","modalContent","cancelEditing","toggleNewAddress","toggleClass","TemplateAccount","hasClass","prepareAddresses","location","hash","countryProvinceSelector","Shopify","CountryProvinceSelector","address","matchesSelector","require$$1","getSize","utils","require$$2","require$$3","item","TemplateCollection","validate","updateFilter","sortProducts","resetFilter","createModal","toggleSharing","section","sectionJSON","tagsWrapper","tags","tagFilter","verticallyAlignHeaderText","collection_filtering","filterProducts","masonryLayout","headerHeight","marginTop","relatedTarget","closest","search","Sorting","sort_by","val","currentSearch","searchParts","split","part","indexOf","splice","join","param","$products","masonry","Masonry","transitionDuration","fallbackURL","filter","selectedText","prev","newTags","tag","filterURL","href","fallback","collectionJSON","JSON","parse","body_html","modalView","TemplateGiftCard","scripts","addQrCode","qrWrapper","qrCode","QRCode","TemplateListCollections","verticallyAlignDetails","imagesLoaded","collection","collectionsDetails","collectionDetailsHeight","TemplatePassword","togglePasswordForm","bind","add","DynamicSlideshow","initializedClass","timeouts","_validate","previousSlide","nextSlide","specificSlide","pauseLoop","startLoop","navigation","pagination","autoplay","parseInt","attr","setWindowWidth","setupSlides","slidesLocked","specificSlideBlock","selectedHeight","windowWidth","clientWidth","slides","slideCount","paginationWidth","marginLeft","i","slide","image","imageHeight","slideHeight","slideContent","textHeight","paddingTop","resetPaginationPosition","resetSlideHeights","delay","$slide","sliding","showNewSlide","preventDefault","nextSlideID","currentTarget","eq","called","direction","activeSlide","offsetWidth","trigger","updateSlidePagination","loop","autoplayInt","setInterval","lockSlide","unlockSlide","clearTimeout","loadVimeoThumbnail","getJSON","thumbnail_large","DynamicVideo","openVideo","closeVideo","videoWrapper","video","detachedVideo","appendTo","verticallyCenterVideo","videoContent","contentWidth","contentHeight","videoHeight","videoRatio","windowHeight","availableHeight","which","detach","Number","isNaN","saveSpecialInstructions","newNote","updateCartNote","updatePrice","price","attributes","attribute","name","Shop","currency","currencySwitcher","StaticCart","messages","updateShippingLabel","render","showFile","calculateShipping","_bindCartItemEvents","scope","updateQuantity","removeProduct","cartText","cartTextJSON","$shippingStrings","savedProducts","shippingCalculator","customerLoggedIn","customerAddress","country","zip","onError","handleErrors","XMLHttpRequest","newQuantity","$productRow","$productPrice","$productQuantity","oldQuantity","Math","max","variant","changeItem","cart","cartItem","items","id","newProductPrice","formatMoney","line_price","moneyFormat","cartItemQuantity","quantity","modalMessage","cartQuantityError","replace","updateCart","itemRow","itemRowContents","productTitle","productURL","showUndo","itemRemovedText","cartUndo","undoRemoval","removeItem","savedProduct","undoneProduct","addItem","getCart","newTotal","total_price","cartCount","item_count","cartCountText","file","match","Cart","ShippingCalculator","shippingCalculatorSubmitButton","shippingCalculatorDisabled","selectableOptions","map","change","auto","shippingAddress","province","getCartShippingRatesForDestination","rates","shippingCalculatorResponse","empty","ratesFeedback","firstRate","formatRate","feedback","shippingCalculatorRates","response","shippingCalculatorRate","shippingCalculatorNoRates","rate","rateValues","shippingCalculatorRateValues","errors","errorMessage","parseJSON","responseText","shippingCalculatorError","$select","selectedOption","toConsumableArray","Variants","ImageZoom","zoomArea","prepareZoom","resize","toggleZoom","zoomImage","photoAreaWidth","photoAreaHeight","newImage","Image","zoomImageWidth","zoomImageHeight","ratios","ratio","backgroundImage","src","zoomWidth","zoomHeight","bigImageOffset","offset","bigImageX","round","left","bigImageY","mousePositionX","pageX","mousePositionY","pageY","ratioX","ratioY","newBackgroundPosition","backgroundPosition","StaticProduct","sectionType","product","zoomEnabled","sectionSettings","enable_zoom","enableSendToCart","enable_send_to_cart","$options","$variants","$form","isThemeEditor","designMode","images","variantHelper","ShopifyVariants","zoomView","_handleErrors","rte","_onSwapImage","_addToCart","_changeVariant","_swapImage","imageId","$nextImageWrapper","$nextImages","$imageWrapper","$images","unwatch","remove","watch","$productMainImage","after","firstLoad","optionNumber","enableHistory","_changeUrl","featured_image","defaultImageId","compare_at_price","CurrencyConverter","params","url","handle","replaceState","ajax","serialize","done","cartLink","continueLink","checkoutLink","_updateCart","fail","error","description","unload","setExpanded","$link","unsetExpanded","MegaNavigation","toggleMobileNavigation","toggleMobileTier","changeTier","previousTier","baconMenu","checkDropdownWidth","prepareMegaNav","resetHeights","$linkItem","$menuWrapper","element","$current","next","is","$item","itemOffset","firstTier","getHiddenHeight","stopPropagation","list","elem","temp","clone","$list","megaNavDropdown","navigationWidth","firstTierHeight","nextTier","nextTierHeight","currentHeight","previousTierHeight","resetMegaNav","Header","megaNav","Pacific","settings","enable_currency_converter","converter","priceSelector","$converter","_converter","toggleSearch","shop_currency","default_currency","display_format","money_format","money_format_no_currency","money_format_currency","_setCurrencyText","first","_updateCurrency","setCurrency","moneyEl","form","focus","toggleDropdown","undefined","Sidebar","Footer","instagramToken","twitterId","twitterRetweets","count","fetchInstagramPhotos","fetchTweets","jqXHR","textStatus","hide","log","query","meta","code","slice","photo","standard_resolution","scale","link","error_message","config","screenName","tweets","renderTweets","fetch","ThemeUtils","sections","ShopifySectionsManager","register","PxsMap","sidebar","templateAccount","templatePassword","templateGiftCard","theme"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}